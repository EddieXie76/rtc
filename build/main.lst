ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccBbPw1t.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SystemClock_Config,"ax",%progbits
  20              		.align	2
  21              		.global	SystemClock_Config
  22              		.thumb
  23              		.thumb_func
  25              	SystemClock_Config:
  26              	.LFB67:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "adc.h"
  23:Core/Src/main.c **** #include "rtc.h"
  24:Core/Src/main.c **** #include "tim.h"
  25:Core/Src/main.c **** #include "usb_device.h"
  26:Core/Src/main.c **** #include "gpio.h"
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  30:Core/Src/main.c **** #include "usbd_cdc_if.h"
  31:Core/Src/main.c **** #include "string.h"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccBbPw1t.s 			page 2


  32:Core/Src/main.c **** /* USER CODE END Includes */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  55:Core/Src/main.c **** void SystemClock_Config(void);
  56:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /**
  66:Core/Src/main.c ****   * @brief  The application entry point.
  67:Core/Src/main.c ****   * @retval int
  68:Core/Src/main.c ****   */
  69:Core/Src/main.c **** int main(void)
  70:Core/Src/main.c **** {
  71:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* USER CODE END 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  78:Core/Src/main.c ****   HAL_Init();
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Configure the system clock */
  85:Core/Src/main.c ****   SystemClock_Config();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  88:Core/Src/main.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccBbPw1t.s 			page 3


  89:Core/Src/main.c ****   /* USER CODE END SysInit */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Initialize all configured peripherals */
  92:Core/Src/main.c ****   MX_GPIO_Init();
  93:Core/Src/main.c ****   MX_RTC_Init();
  94:Core/Src/main.c ****   MX_USB_DEVICE_Init();
  95:Core/Src/main.c ****   MX_TIM3_Init();
  96:Core/Src/main.c ****   MX_TIM4_Init();
  97:Core/Src/main.c ****   MX_TIM5_Init();
  98:Core/Src/main.c ****   MX_ADC1_Init();
  99:Core/Src/main.c ****   MX_ADC2_Init();
 100:Core/Src/main.c ****   MX_ADC3_Init();
 101:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 102:Core/Src/main.c ****   RTC_First_Init(&hrtc);
 103:Core/Src/main.c ****   RTC_TimeTypeDef time = {0};
 104:Core/Src/main.c ****   RTC_DateTypeDef date = {0};
 105:Core/Src/main.c ****   // USBD_CDC_Init();
 106:Core/Src/main.c ****   /* USER CODE END 2 */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* Infinite loop */
 109:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 110:Core/Src/main.c ****   while (1)
 111:Core/Src/main.c ****   {
 112:Core/Src/main.c ****     /* USER CODE END WHILE */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 115:Core/Src/main.c ****     HAL_RTC_GetDate(&hrtc, &date, RTC_FORMAT_BIN);
 116:Core/Src/main.c ****     HAL_RTC_GetTime(&hrtc, &time, RTC_FORMAT_BIN);
 117:Core/Src/main.c ****     uint8_t str[16];
 118:Core/Src/main.c ****     sprintf(str, "%02d-%02d-%02d %02d:%02d:%02d\r\n", 
 119:Core/Src/main.c ****       date.Year, date.Month, date.Date, time.Hours, time.Minutes, time.Seconds);
 120:Core/Src/main.c ****     CDC_Transmit_FS(str, strlen(str));
 121:Core/Src/main.c ****     HAL_Delay(1000);
 122:Core/Src/main.c ****   }
 123:Core/Src/main.c ****   /* USER CODE END 3 */
 124:Core/Src/main.c **** }
 125:Core/Src/main.c **** 
 126:Core/Src/main.c **** /**
 127:Core/Src/main.c ****   * @brief System Clock Configuration
 128:Core/Src/main.c ****   * @retval None
 129:Core/Src/main.c ****   */
 130:Core/Src/main.c **** void SystemClock_Config(void)
 131:Core/Src/main.c **** {
  28              		.loc 1 131 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 88
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 97B0     		sub	sp, sp, #92
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 104
 132:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccBbPw1t.s 			page 4


  41              		.loc 1 132 0
  42 0004 2822     		movs	r2, #40
  43 0006 0021     		movs	r1, #0
  44 0008 0CA8     		add	r0, sp, #48
  45 000a FFF7FEFF 		bl	memset
  46              	.LVL0:
 133:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  47              		.loc 1 133 0
  48 000e 0024     		movs	r4, #0
  49 0010 0794     		str	r4, [sp, #28]
  50 0012 0894     		str	r4, [sp, #32]
  51 0014 0994     		str	r4, [sp, #36]
  52 0016 0A94     		str	r4, [sp, #40]
  53 0018 0B94     		str	r4, [sp, #44]
 134:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  54              		.loc 1 134 0
  55 001a 0194     		str	r4, [sp, #4]
  56 001c 0294     		str	r4, [sp, #8]
  57 001e 0394     		str	r4, [sp, #12]
  58 0020 0494     		str	r4, [sp, #16]
  59 0022 0594     		str	r4, [sp, #20]
  60 0024 0694     		str	r4, [sp, #24]
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 137:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 138:Core/Src/main.c ****   */
 139:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
  61              		.loc 1 139 0
  62 0026 0923     		movs	r3, #9
  63 0028 0C93     		str	r3, [sp, #48]
 140:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  64              		.loc 1 140 0
  65 002a 4FF48033 		mov	r3, #65536
  66 002e 0D93     		str	r3, [sp, #52]
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 142:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  67              		.loc 1 142 0
  68 0030 0122     		movs	r2, #1
  69 0032 1092     		str	r2, [sp, #64]
 143:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
  70              		.loc 1 143 0
  71 0034 1292     		str	r2, [sp, #72]
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  72              		.loc 1 144 0
  73 0036 0225     		movs	r5, #2
  74 0038 1395     		str	r5, [sp, #76]
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  75              		.loc 1 145 0
  76 003a 1493     		str	r3, [sp, #80]
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  77              		.loc 1 146 0
  78 003c 4FF4E013 		mov	r3, #1835008
  79 0040 1593     		str	r3, [sp, #84]
 147:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  80              		.loc 1 147 0
  81 0042 0CA8     		add	r0, sp, #48
  82 0044 FFF7FEFF 		bl	HAL_RCC_OscConfig
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccBbPw1t.s 			page 5


  83              	.LVL1:
 148:Core/Src/main.c ****   {
 149:Core/Src/main.c ****     Error_Handler();
 150:Core/Src/main.c ****   }
 151:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 152:Core/Src/main.c ****   */
 153:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  84              		.loc 1 153 0
  85 0048 0F23     		movs	r3, #15
  86 004a 0793     		str	r3, [sp, #28]
 154:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 155:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  87              		.loc 1 155 0
  88 004c 0895     		str	r5, [sp, #32]
 156:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  89              		.loc 1 156 0
  90 004e 0994     		str	r4, [sp, #36]
 157:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
  91              		.loc 1 157 0
  92 0050 4FF48063 		mov	r3, #1024
  93 0054 0A93     		str	r3, [sp, #40]
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
  94              		.loc 1 158 0
  95 0056 0B94     		str	r4, [sp, #44]
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
  96              		.loc 1 160 0
  97 0058 2946     		mov	r1, r5
  98 005a 07A8     		add	r0, sp, #28
  99 005c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 100              	.LVL2:
 161:Core/Src/main.c ****   {
 162:Core/Src/main.c ****     Error_Handler();
 163:Core/Src/main.c ****   }
 164:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_ADC
 101              		.loc 1 164 0
 102 0060 1323     		movs	r3, #19
 103 0062 0193     		str	r3, [sp, #4]
 165:Core/Src/main.c ****                               |RCC_PERIPHCLK_USB;
 166:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 104              		.loc 1 166 0
 105 0064 4FF40073 		mov	r3, #512
 106 0068 0293     		str	r3, [sp, #8]
 167:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 107              		.loc 1 167 0
 108 006a 4FF40043 		mov	r3, #32768
 109 006e 0393     		str	r3, [sp, #12]
 168:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 110              		.loc 1 168 0
 111 0070 0694     		str	r4, [sp, #24]
 169:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 112              		.loc 1 169 0
 113 0072 01A8     		add	r0, sp, #4
 114 0074 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 115              	.LVL3:
 170:Core/Src/main.c ****   {
 171:Core/Src/main.c ****     Error_Handler();
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccBbPw1t.s 			page 6


 172:Core/Src/main.c ****   }
 173:Core/Src/main.c **** }
 116              		.loc 1 173 0
 117 0078 17B0     		add	sp, sp, #92
 118              	.LCFI2:
 119              		.cfi_def_cfa_offset 12
 120              		@ sp needed
 121 007a 30BD     		pop	{r4, r5, pc}
 122              		.cfi_endproc
 123              	.LFE67:
 125              		.section	.text.main,"ax",%progbits
 126              		.align	2
 127              		.global	main
 128              		.thumb
 129              		.thumb_func
 131              	main:
 132              	.LFB66:
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 133              		.loc 1 70 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 24
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137 0000 30B5     		push	{r4, r5, lr}
 138              	.LCFI3:
 139              		.cfi_def_cfa_offset 12
 140              		.cfi_offset 4, -12
 141              		.cfi_offset 5, -8
 142              		.cfi_offset 14, -4
 143 0002 8BB0     		sub	sp, sp, #44
 144              	.LCFI4:
 145              		.cfi_def_cfa_offset 56
  78:Core/Src/main.c **** 
 146              		.loc 1 78 0
 147 0004 FFF7FEFF 		bl	HAL_Init
 148              	.LVL4:
  85:Core/Src/main.c **** 
 149              		.loc 1 85 0
 150 0008 FFF7FEFF 		bl	SystemClock_Config
 151              	.LVL5:
  92:Core/Src/main.c ****   MX_RTC_Init();
 152              		.loc 1 92 0
 153 000c FFF7FEFF 		bl	MX_GPIO_Init
 154              	.LVL6:
  93:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 155              		.loc 1 93 0
 156 0010 FFF7FEFF 		bl	MX_RTC_Init
 157              	.LVL7:
  94:Core/Src/main.c ****   MX_TIM3_Init();
 158              		.loc 1 94 0
 159 0014 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 160              	.LVL8:
  95:Core/Src/main.c ****   MX_TIM4_Init();
 161              		.loc 1 95 0
 162 0018 FFF7FEFF 		bl	MX_TIM3_Init
 163              	.LVL9:
  96:Core/Src/main.c ****   MX_TIM5_Init();
 164              		.loc 1 96 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccBbPw1t.s 			page 7


 165 001c FFF7FEFF 		bl	MX_TIM4_Init
 166              	.LVL10:
  97:Core/Src/main.c ****   MX_ADC1_Init();
 167              		.loc 1 97 0
 168 0020 FFF7FEFF 		bl	MX_TIM5_Init
 169              	.LVL11:
  98:Core/Src/main.c ****   MX_ADC2_Init();
 170              		.loc 1 98 0
 171 0024 FFF7FEFF 		bl	MX_ADC1_Init
 172              	.LVL12:
  99:Core/Src/main.c ****   MX_ADC3_Init();
 173              		.loc 1 99 0
 174 0028 FFF7FEFF 		bl	MX_ADC2_Init
 175              	.LVL13:
 100:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 176              		.loc 1 100 0
 177 002c FFF7FEFF 		bl	MX_ADC3_Init
 178              	.LVL14:
 102:Core/Src/main.c ****   RTC_TimeTypeDef time = {0};
 179              		.loc 1 102 0
 180 0030 1948     		ldr	r0, .L6
 181 0032 FFF7FEFF 		bl	RTC_First_Init
 182              	.LVL15:
 103:Core/Src/main.c ****   RTC_DateTypeDef date = {0};
 183              		.loc 1 103 0
 184 0036 0023     		movs	r3, #0
 185 0038 ADF82430 		strh	r3, [sp, #36]	@ movhi
 186 003c 8DF82630 		strb	r3, [sp, #38]
 104:Core/Src/main.c ****   // USBD_CDC_Init();
 187              		.loc 1 104 0
 188 0040 0893     		str	r3, [sp, #32]
 189              	.L4:
 190              	.LBB2:
 115:Core/Src/main.c ****     HAL_RTC_GetTime(&hrtc, &time, RTC_FORMAT_BIN);
 191              		.loc 1 115 0 discriminator 1
 192 0042 154C     		ldr	r4, .L6
 193 0044 0022     		movs	r2, #0
 194 0046 08A9     		add	r1, sp, #32
 195 0048 2046     		mov	r0, r4
 196 004a FFF7FEFF 		bl	HAL_RTC_GetDate
 197              	.LVL16:
 116:Core/Src/main.c ****     uint8_t str[16];
 198              		.loc 1 116 0 discriminator 1
 199 004e 0022     		movs	r2, #0
 200 0050 09A9     		add	r1, sp, #36
 201 0052 2046     		mov	r0, r4
 202 0054 FFF7FEFF 		bl	HAL_RTC_GetTime
 203              	.LVL17:
 119:Core/Src/main.c ****     CDC_Transmit_FS(str, strlen(str));
 204              		.loc 1 119 0 discriminator 1
 205 0058 9DF82320 		ldrb	r2, [sp, #35]	@ zero_extendqisi2
 206 005c 9DF82130 		ldrb	r3, [sp, #33]	@ zero_extendqisi2
 207 0060 9DF82210 		ldrb	r1, [sp, #34]	@ zero_extendqisi2
 208 0064 9DF82400 		ldrb	r0, [sp, #36]	@ zero_extendqisi2
 209 0068 9DF82540 		ldrb	r4, [sp, #37]	@ zero_extendqisi2
 210 006c 9DF82650 		ldrb	r5, [sp, #38]	@ zero_extendqisi2
 118:Core/Src/main.c ****       date.Year, date.Month, date.Date, time.Hours, time.Minutes, time.Seconds);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccBbPw1t.s 			page 8


 211              		.loc 1 118 0 discriminator 1
 212 0070 0395     		str	r5, [sp, #12]
 213 0072 0294     		str	r4, [sp, #8]
 214 0074 0190     		str	r0, [sp, #4]
 215 0076 0091     		str	r1, [sp]
 216 0078 0849     		ldr	r1, .L6+4
 217 007a 04A8     		add	r0, sp, #16
 218 007c FFF7FEFF 		bl	sprintf
 219              	.LVL18:
 120:Core/Src/main.c ****     HAL_Delay(1000);
 220              		.loc 1 120 0 discriminator 1
 221 0080 04A8     		add	r0, sp, #16
 222 0082 FFF7FEFF 		bl	strlen
 223              	.LVL19:
 224 0086 81B2     		uxth	r1, r0
 225 0088 04A8     		add	r0, sp, #16
 226 008a FFF7FEFF 		bl	CDC_Transmit_FS
 227              	.LVL20:
 121:Core/Src/main.c ****   }
 228              		.loc 1 121 0 discriminator 1
 229 008e 4FF47A70 		mov	r0, #1000
 230 0092 FFF7FEFF 		bl	HAL_Delay
 231              	.LVL21:
 232 0096 D4E7     		b	.L4
 233              	.L7:
 234              		.align	2
 235              	.L6:
 236 0098 00000000 		.word	hrtc
 237 009c 00000000 		.word	.LC0
 238              	.LBE2:
 239              		.cfi_endproc
 240              	.LFE66:
 242              		.section	.text.Error_Handler,"ax",%progbits
 243              		.align	2
 244              		.global	Error_Handler
 245              		.thumb
 246              		.thumb_func
 248              	Error_Handler:
 249              	.LFB68:
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** /* USER CODE END 4 */
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** /**
 180:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 181:Core/Src/main.c ****   * @retval None
 182:Core/Src/main.c ****   */
 183:Core/Src/main.c **** void Error_Handler(void)
 184:Core/Src/main.c **** {
 250              		.loc 1 184 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
 254              		@ link register save eliminated.
 255 0000 7047     		bx	lr
 256              		.cfi_endproc
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccBbPw1t.s 			page 9


 257              	.LFE68:
 259 0002 00BF     		.section	.rodata.str1.4,"aMS",%progbits,1
 260              		.align	2
 261              	.LC0:
 262 0000 25303264 		.ascii	"%02d-%02d-%02d %02d:%02d:%02d\015\012\000"
 262      2D253032 
 262      642D2530 
 262      32642025 
 262      3032643A 
 263              		.text
 264              	.Letext0:
 265              		.file 2 "d:\\devtools\\gcc-arm\\arm-none-eabi\\include\\machine\\_default_types.h"
 266              		.file 3 "d:\\devtools\\gcc-arm\\arm-none-eabi\\include\\sys\\_stdint.h"
 267              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 268              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 269              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 270              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 271              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rtc.h"
 272              		.file 9 "Drivers/CMSIS/Include/core_cm3.h"
 273              		.file 10 "Core/Inc/rtc.h"
 274              		.file 11 "d:\\devtools\\gcc-arm\\arm-none-eabi\\include\\stdio.h"
 275              		.file 12 "d:\\devtools\\gcc-arm\\arm-none-eabi\\include\\string.h"
 276              		.file 13 "USB_DEVICE/App/usbd_cdc_if.h"
 277              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 278              		.file 15 "Core/Inc/gpio.h"
 279              		.file 16 "USB_DEVICE/App/usb_device.h"
 280              		.file 17 "Core/Inc/tim.h"
 281              		.file 18 "Core/Inc/adc.h"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccBbPw1t.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\ADMINI~1\AppData\Local\Temp\ccBbPw1t.s:20     .text.SystemClock_Config:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccBbPw1t.s:25     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\ADMINI~1\AppData\Local\Temp\ccBbPw1t.s:126    .text.main:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccBbPw1t.s:131    .text.main:00000000 main
C:\Users\ADMINI~1\AppData\Local\Temp\ccBbPw1t.s:236    .text.main:00000098 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccBbPw1t.s:243    .text.Error_Handler:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccBbPw1t.s:248    .text.Error_Handler:00000000 Error_Handler
C:\Users\ADMINI~1\AppData\Local\Temp\ccBbPw1t.s:260    .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_RTC_Init
MX_USB_DEVICE_Init
MX_TIM3_Init
MX_TIM4_Init
MX_TIM5_Init
MX_ADC1_Init
MX_ADC2_Init
MX_ADC3_Init
RTC_First_Init
HAL_RTC_GetDate
HAL_RTC_GetTime
sprintf
strlen
CDC_Transmit_FS
HAL_Delay
hrtc
