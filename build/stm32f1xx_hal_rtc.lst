ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32f1xx_hal_rtc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RTC_ReadTimeCounter,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	RTC_ReadTimeCounter:
  25              	.LFB82:
  26              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c"
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @file    stm32f1xx_hal_rtc.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief   RTC HAL module driver.
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          functionalities of the Real Time Clock (RTC) peripheral:
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *           + RTC Time and Date functions
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *           + RTC Alarm functions
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *           + Peripheral Control functions
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *           + Peripheral State functions
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   @verbatim
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ==============================================================================
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                   ##### How to use this driver #####
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ==================================================================
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Enable the RTC domain access (see description in the section above).
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Configure the RTC Prescaler (Asynchronous prescaler to generate RTC 1Hz time base)
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         using the HAL_RTC_Init() function.
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *** Time and Date configuration ***
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ===================================
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) To configure the RTC Calendar (Time and Date) use the HAL_RTC_SetTime()
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         and HAL_RTC_SetDate() functions.
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) To read the RTC Calendar, use the HAL_RTC_GetTime() and HAL_RTC_GetDate() functions.
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *** Alarm configuration ***
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ===========================
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 2


  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) To configure the RTC Alarm use the HAL_RTC_SetAlarm() function.
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         You can also configure the RTC Alarm with interrupt mode using the HAL_RTC_SetAlarm_IT() fu
  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) To read the RTC Alarm, use the HAL_RTC_GetAlarm() function.
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *** Tamper configuration ***
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ============================
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Enable the RTC Tamper and configure the Tamper Level using the
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         HAL_RTCEx_SetTamper() function. You can configure RTC Tamper with interrupt
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         mode using HAL_RTCEx_SetTamper_IT() function.
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) The TAMPER1 alternate function can be mapped to PC13
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *** Backup Data Registers configuration ***
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ===========================================
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) To write to the RTC Backup Data registers, use the HAL_RTCEx_BKUPWrite()
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         function.
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) To read the RTC Backup Data registers, use the HAL_RTCEx_BKUPRead()
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         function.
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                   ##### WARNING: Drivers Restrictions  #####
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ==================================================================
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] RTC version used on STM32F1 families is version V1. All the features supported by V2
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        (other families) will be not supported on F1.
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] As on V2, main RTC features are managed by HW. But on F1, date feature is completely
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        managed by SW.
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] Then, there are some restrictions compared to other families:
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Only format 24 hours supported in HAL (format 12 hours not supported)
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Date is saved in SRAM. Then, when MCU is in STOP or STANDBY mode, date will be lost.
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         User should implement a way to save date before entering in low power mode (an
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         example is provided with firmware package based on backup registers)
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Date is automatically updated each time a HAL_RTC_GetTime or HAL_RTC_GetDate is called.
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Alarm detection is limited to 1 day. It will expire only 1 time (no alarm repetition, need
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         to program a new alarm)
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****               ##### Backup Domain Operating Condition #####
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ==============================================================================
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] The real-time clock (RTC) and the RTC backup registers can be powered
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        from the VBAT voltage when the main VDD supply is powered off.
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        To retain the content of the RTC backup registers and supply the RTC
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        when VDD is turned off, VBAT pin can be connected to an optional
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        standby voltage supplied by a battery or by another source.
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] To allow the RTC operating even when the main digital supply (VDD) is turned
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        off, the VBAT pin powers the following blocks:
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (#) The RTC
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (#) The LSE oscillator
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (#) The backup SRAM when the low power backup regulator is enabled
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (#) PC13 to PC15 I/Os, plus PI8 I/O (when available)
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] When the backup domain is supplied by VDD (analog switch connected to VDD),
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        the following pins are available:
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) PC13 can be used as a Tamper pin
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] When the backup domain is supplied by VBAT (analog switch connected to VBAT
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        because VDD is not present), the following pins are available:
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) PC13 can be used as the Tamper pin
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 3


  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                    ##### Backup Domain Reset #####
  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ==================================================================
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] The backup domain reset sets all RTC registers and the RCC_BDCR register
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        to their reset values.
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] A backup domain reset is generated when one of the following events occurs:
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (#) Software reset, triggered by setting the BDRST bit in the
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         RCC Backup domain control register (RCC_BDCR).
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (#) VDD or VBAT power on, if both supplies have previously been powered off.
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (#) Tamper detection event resets all data backup registers.
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                    ##### Backup Domain Access #####
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ==================================================================
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] After reset, the backup domain (RTC registers, RTC backup data
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        registers and backup SRAM) is protected against possible unwanted write
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        accesses.
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] To enable access to the RTC Domain and RTC registers, proceed as follows:
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Call the function HAL_RCCEx_PeriphCLKConfig in using RCC_PERIPHCLK_RTC for
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         PeriphClockSelection and select RTCClockSelection (LSE, LSI or HSE)
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Enable the BKP clock in using __HAL_RCC_BKP_CLK_ENABLE()
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                   ##### RTC and low power modes #####
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ==================================================================
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] The MCU can be woken up from a low power mode by an RTC alternate
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        function.
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] The RTC alternate functions are the RTC alarms (Alarm A),
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        and RTC tamper event detection.
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        These RTC alternate functions can wake up the system from the Stop and
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        Standby low power modes.
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] The system can also wake up from low power modes without depending
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        on an external interrupt (Auto-wakeup mode), by using the RTC alarm.
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *** Callback registration ***
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   =============================================
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   The compilation define  USE_HAL_RTC_REGISTER_CALLBACKS when set to 1
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   allows the user to configure dynamically the driver callbacks.
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   Use Function @ref HAL_RTC_RegisterCallback() to register an interrupt callback.
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   Function @ref HAL_RTC_RegisterCallback() allows to register following callbacks:
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) AlarmAEventCallback          : RTC Alarm A Event callback.
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Tamper1EventCallback         : RTC Tamper 1 Event callback.
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) MspInitCallback              : RTC MspInit callback.
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) MspDeInitCallback            : RTC MspDeInit callback.
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]	  
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   This function takes as parameters the HAL peripheral handle, the Callback ID
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   and a pointer to the user callback function.
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   Use function @ref HAL_RTC_UnRegisterCallback() to reset a callback to the default
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   weak function.
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   @ref HAL_RTC_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   and the Callback ID.
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   This function allows to reset following callbacks:
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) AlarmAEventCallback          : RTC Alarm A Event callback.
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Tamper1EventCallback         : RTC Tamper 1 Event callback.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 4


 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) MspInitCallback              : RTC MspInit callback.
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) MspDeInitCallback            : RTC MspDeInit callback.
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   By default, after the @ref HAL_RTC_Init() and when the state is HAL_RTC_STATE_RESET,
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   all callbacks are set to the corresponding weak functions :
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   example @ref AlarmAEventCallback().
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   Exception done for MspInit and MspDeInit callbacks that are reset to the legacy weak function
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   in the @ref HAL_RTC_Init()/@ref HAL_RTC_DeInit() only when these callbacks are null
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   (not registered beforehand).
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   If not, MspInit or MspDeInit are not null, @ref HAL_RTC_Init()/@ref HAL_RTC_DeInit()
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   Callbacks can be registered/unregistered in HAL_RTC_STATE_READY state only.
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   Exception done MspInit/MspDeInit that can be registered/unregistered
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   in HAL_RTC_STATE_READY or HAL_RTC_STATE_RESET state,
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   In that case first register the MspInit/MspDeInit user callbacks
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   using @ref HAL_RTC_RegisterCallback() before calling @ref HAL_RTC_DeInit()
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   or @ref HAL_RTC_Init() function.
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   When The compilation define USE_HAL_RTC_REGISTER_CALLBACKS is set to 0 or
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   not defined, the callback registration feature is not available and all callbacks
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   are set to the corresponding weak functions.
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    @endverbatim
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ******************************************************************************
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @attention
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * All rights reserved.</center></h2>
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * the "License"; You may not use this file except in compliance with the
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * License. You may obtain a copy of the License at:
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                        opensource.org/licenses/BSD-3-Clause
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ******************************************************************************
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /* Includes ------------------------------------------------------------------*/
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #include "stm32f1xx_hal.h"
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @addtogroup STM32F1xx_HAL_Driver
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC RTC
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief RTC HAL module driver
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #ifdef HAL_RTC_MODULE_ENABLED
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /* Private typedef -----------------------------------------------------------*/
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /* Private define ------------------------------------------------------------*/
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Private_Constants RTC Private Constants
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 5


 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #define RTC_ALARM_RESETVALUE_REGISTER    (uint16_t)0xFFFF
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #define RTC_ALARM_RESETVALUE             0xFFFFFFFFU
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /* Private macro -------------------------------------------------------------*/
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Private_Macros RTC Private Macros
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /* Private variables ---------------------------------------------------------*/
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /* Private function prototypes -----------------------------------------------*/
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Private_Functions RTC Private Functions
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint32_t           RTC_ReadTimeCounter(RTC_HandleTypeDef *hrtc);
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef  RTC_WriteTimeCounter(RTC_HandleTypeDef *hrtc, uint32_t TimeCounter);
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint32_t           RTC_ReadAlarmCounter(RTC_HandleTypeDef *hrtc);
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef  RTC_WriteAlarmCounter(RTC_HandleTypeDef *hrtc, uint32_t AlarmCounter);
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef  RTC_EnterInitMode(RTC_HandleTypeDef *hrtc);
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef  RTC_ExitInitMode(RTC_HandleTypeDef *hrtc);
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t            RTC_ByteToBcd2(uint8_t Value);
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t            RTC_Bcd2ToByte(uint8_t Value);
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t            RTC_IsLeapYear(uint16_t nYear);
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static void               RTC_DateUpdate(RTC_HandleTypeDef *hrtc, uint32_t DayElapsed);
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t            RTC_WeekDayNum(uint32_t nYear, uint8_t nMonth, uint8_t nDay);
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /* Private functions ---------------------------------------------------------*/
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Exported_Functions RTC Exported Functions
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Exported_Functions_Group1 Initialization and de-initialization functions
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *  @brief    Initialization and Configuration functions
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @verbatim
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****               ##### Initialization and de-initialization functions #####
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    [..] This section provides functions allowing to initialize and configure the
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****          RTC Prescaler (Asynchronous), disable RTC registers Write protection,
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****          enter and exit the RTC initialization mode,
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****          RTC registers synchronization check and reference clock detection enable.
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****          (#) The RTC Prescaler should be programmed to generate the RTC 1Hz time base.
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****          (#) All RTC registers are Write protected. Writing to the RTC registers
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****              is enabled by setting the CNF bit in the RTC_CRL register.
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****          (#) To read the calendar after wakeup from low power modes (Standby or Stop)
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****              the software must first wait for the RSF bit (Register Synchronized Flag)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 6


 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****              in the RTC_CRL register to be set by hardware.
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****              The HAL_RTC_WaitForSynchro() function implements the above software
 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****              sequence (RSF clear and RSF check).
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @endverbatim
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Initializes the RTC peripheral
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_Init(RTC_HandleTypeDef *hrtc)
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t prescaler = 0U;
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (hrtc == NULL)
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(hrtc->Instance));
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_CALIB_OUTPUT(hrtc->Init.OutPut));
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_ASYNCH_PREDIV(hrtc->Init.AsynchPrediv));
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (hrtc->State == HAL_RTC_STATE_RESET)
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Allocate lock resource and initialize it */
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->Lock = HAL_UNLOCKED;
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->AlarmAEventCallback          =  HAL_RTC_AlarmAEventCallback;        /* Legacy weak AlarmA
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->Tamper1EventCallback         =  HAL_RTCEx_Tamper1EventCallback;     /* Legacy weak Tamper
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (hrtc->MspInitCallback == NULL)
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       hrtc->MspInitCallback = HAL_RTC_MspInit;
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Init the low level hardware */
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->MspInitCallback(hrtc);
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (hrtc->MspDeInitCallback == NULL)
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       hrtc->MspDeInitCallback = HAL_RTC_MspDeInit;
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #else
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (hrtc->State == HAL_RTC_STATE_RESET)
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Allocate lock resource and initialize it */
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->Lock = HAL_UNLOCKED;
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Initialize RTC MSP */
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     HAL_RTC_MspInit(hrtc);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 7


 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS) */
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set RTC state */
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Waiting for synchro */
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set Initialization mode */
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (RTC_EnterInitMode(hrtc) != HAL_OK)
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Clear Flags Bits */
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_BIT(hrtc->Instance->CRL, (RTC_FLAG_OW | RTC_FLAG_ALRAF | RTC_FLAG_SEC));
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (hrtc->Init.OutPut != RTC_OUTPUTSOURCE_NONE)
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Disable the selected Tamper pin */
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       CLEAR_BIT(BKP->CR, BKP_CR_TPE);
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set the signal which will be routed to RTC Tamper pin*/
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     MODIFY_REG(BKP->RTCCR, (BKP_RTCCR_CCO | BKP_RTCCR_ASOE | BKP_RTCCR_ASOS), hrtc->Init.OutPut);
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (hrtc->Init.AsynchPrediv != RTC_AUTO_1_SECOND)
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* RTC Prescaler provided directly by end-user*/
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       prescaler = hrtc->Init.AsynchPrediv;
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     else
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* RTC Prescaler will be automatically calculated to get 1 second timebase */
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Get the RTCCLK frequency */
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       prescaler = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_RTC);
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Check that RTC clock is enabled*/
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if (prescaler == 0U)
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Should not happen. Frequency is not available*/
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_ERROR;
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         return HAL_ERROR;
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       else
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 8


 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* RTC period = RTCCLK/(RTC_PR + 1) */
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         prescaler = prescaler - 1U;
 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Configure the RTC_PRLH / RTC_PRLL */
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     MODIFY_REG(hrtc->Instance->PRLH, RTC_PRLH_PRL, (prescaler >> 16U));
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     MODIFY_REG(hrtc->Instance->PRLL, RTC_PRLL_PRL, (prescaler & RTC_PRLL_PRL));
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Wait for synchro */
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (RTC_ExitInitMode(hrtc) != HAL_OK)
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_ERROR;
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Initialize date to 1st of January 2000 */
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Year = 0x00U;
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Month = RTC_MONTH_JANUARY;
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Date = 0x01U;
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY;
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_OK;
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  DeInitializes the RTC peripheral
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @note   This function does not reset the RTC Backup Data registers.
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_DeInit(RTC_HandleTypeDef *hrtc)
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (hrtc == NULL)
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(hrtc->Instance));
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set RTC state */
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set Initialization mode */
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (RTC_EnterInitMode(hrtc) != HAL_OK)
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Release Lock */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 9


 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->CNTL);
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->CNTH);
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->PRLL, 0x00008000U);
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->PRLH);
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Reset All CRH/CRL bits */
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->CRH);
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->CRL);
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (RTC_ExitInitMode(hrtc) != HAL_OK)
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Process Unlocked */
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       __HAL_UNLOCK(hrtc);
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_ERROR;
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Wait for synchro*/
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   HAL_RTC_WaitForSynchro(hrtc);
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Clear RSF flag */
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   CLEAR_BIT(hrtc->Instance->CRL, RTC_FLAG_RSF);
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (hrtc->MspDeInitCallback == NULL)
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->MspDeInitCallback = HAL_RTC_MspDeInit;
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* DeInit the low level hardware: CLOCK, NVIC.*/
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->MspDeInitCallback(hrtc);
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #else
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* De-Initialize RTC MSP */
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   HAL_RTC_MspDeInit(hrtc);
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS) */
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_RESET;
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Release Lock */
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Register a User RTC Callback
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 10


 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         To be used instead of the weak predefined callback
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc RTC handle
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  CallbackID ID of the callback to be registered
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         This parameter can be one of the following values:
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_ALARM_A_EVENT_CB_ID          Alarm A Event Callback ID
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_TAMPER1_EVENT_CB_ID          Tamper 1 Callback ID
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_MSPINIT_CB_ID                Msp Init callback ID
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_MSPDEINIT_CB_ID              Msp DeInit callback ID
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  pCallback pointer to the Callback function
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_RegisterCallback(RTC_HandleTypeDef *hrtc, HAL_RTC_CallbackIDTypeDef Callb
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (pCallback == NULL)
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process locked */
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (HAL_RTC_STATE_READY == hrtc->State)
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     switch (CallbackID)
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       case HAL_RTC_ALARM_A_EVENT_CB_ID :
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->AlarmAEventCallback = pCallback;
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       case HAL_RTC_TAMPER1_EVENT_CB_ID :
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->Tamper1EventCallback = pCallback;
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       case HAL_RTC_MSPINIT_CB_ID :
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->MspInitCallback = pCallback;
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       case HAL_RTC_MSPDEINIT_CB_ID :
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->MspDeInitCallback = pCallback;
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       default :
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Return error status */
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         status =  HAL_ERROR;
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else if (HAL_RTC_STATE_RESET == hrtc->State)
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     switch (CallbackID)
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       case HAL_RTC_MSPINIT_CB_ID :
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->MspInitCallback = pCallback;
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 11


 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       case HAL_RTC_MSPDEINIT_CB_ID :
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->MspDeInitCallback = pCallback;
 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       default :
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Return error status */
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         status =  HAL_ERROR;
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Return error status */
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     status =  HAL_ERROR;
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Release Lock */
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return status;
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Unregister an RTC Callback
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         RTC callabck is redirected to the weak predefined callback
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc RTC handle
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  CallbackID ID of the callback to be unregistered
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         This parameter can be one of the following values:
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_ALARM_A_EVENT_CB_ID          Alarm A Event Callback ID
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_TAMPER1_EVENT_CB_ID          Tamper 1 Callback ID
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_MSPINIT_CB_ID Msp Init callback ID
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_MSPDEINIT_CB_ID Msp DeInit callback ID
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_UnRegisterCallback(RTC_HandleTypeDef *hrtc, HAL_RTC_CallbackIDTypeDef Cal
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process locked */
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (HAL_RTC_STATE_READY == hrtc->State)
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     switch (CallbackID)
 590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       case HAL_RTC_ALARM_A_EVENT_CB_ID :
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->AlarmAEventCallback = HAL_RTC_AlarmAEventCallback;         /* Legacy weak AlarmAEvent
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       case HAL_RTC_TAMPER1_EVENT_CB_ID :
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->Tamper1EventCallback = HAL_RTCEx_Tamper1EventCallback;         /* Legacy weak Tamper1
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       case HAL_RTC_MSPINIT_CB_ID :
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->MspInitCallback = HAL_RTC_MspInit;
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 12


 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       case HAL_RTC_MSPDEINIT_CB_ID :
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->MspDeInitCallback = HAL_RTC_MspDeInit;
 605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       default :
 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Return error status */
 609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         status =  HAL_ERROR;
 610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else if (HAL_RTC_STATE_RESET == hrtc->State)
 614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     switch (CallbackID)
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       case HAL_RTC_MSPINIT_CB_ID :
 618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->MspInitCallback = HAL_RTC_MspInit;
 619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       case HAL_RTC_MSPDEINIT_CB_ID :
 622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->MspDeInitCallback = HAL_RTC_MspDeInit;
 623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       default :
 626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Return error status */
 627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         status =  HAL_ERROR;
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         break;
 629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Return error status */
 634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     status =  HAL_ERROR;
 635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Release Lock */
 638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return status;
 641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Initializes the RTC MSP.
 646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval None
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** __weak void HAL_RTC_MspInit(RTC_HandleTypeDef *hrtc)
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   UNUSED(hrtc);
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****             the HAL_RTC_MspInit could be implemented in the user file
 656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    */
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 13


 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  DeInitializes the RTC MSP.
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval None
 664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** __weak void HAL_RTC_MspDeInit(RTC_HandleTypeDef *hrtc)
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   UNUSED(hrtc);
 669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****             the HAL_RTC_MspDeInit could be implemented in the user file
 671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    */
 672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
 676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Exported_Functions_Group2 Time and Date functions
 679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *  @brief   RTC Time and Date functions
 680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *
 681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @verbatim
 682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
 683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                  ##### RTC Time and Date functions #####
 684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
 685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  [..] This section provides functions allowing to configure Time and Date features
 687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @endverbatim
 689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Sets RTC current time.
 694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  sTime: Pointer to Time structure
 697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format
 700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0U, counter_alarm = 0U;
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if ((hrtc == NULL) || (sTime == NULL))
 709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process Locked */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 14


 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_HOUR24(sTime->Hours));
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sTime->Minutes));
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sTime->Seconds));
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_time = (uint32_t)(((uint32_t)sTime->Hours * 3600U) + \
 728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                               ((uint32_t)sTime->Minutes * 60U) + \
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                               ((uint32_t)sTime->Seconds));
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sTime->Hours)));
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sTime->Minutes)));
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sTime->Seconds)));
 736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_time = (((uint32_t)(RTC_Bcd2ToByte(sTime->Hours)) * 3600U) + \
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                     ((uint32_t)(RTC_Bcd2ToByte(sTime->Minutes)) * 60U) + \
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                     ((uint32_t)(RTC_Bcd2ToByte(sTime->Seconds))));
 740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Write time counter in RTC registers */
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (RTC_WriteTimeCounter(hrtc, counter_time) != HAL_OK)
 744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Process Unlocked */
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Clear Second and overflow flags */
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_BIT(hrtc->Instance->CRL, (RTC_FLAG_SEC | RTC_FLAG_OW));
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Read current Alarm counter in RTC registers */
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm = RTC_ReadAlarmCounter(hrtc);
 760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set again alarm to match with new time if enabled */
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (counter_alarm != RTC_ALARM_RESETVALUE)
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if (counter_alarm < counter_time)
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Add 1 day to alarm counter*/
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         counter_alarm += (uint32_t)(24U * 3600U);
 768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Write new Alarm counter in RTC registers */
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         if (RTC_WriteAlarmCounter(hrtc, counter_alarm) != HAL_OK)
 771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
 772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           /* Set RTC state */
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           hrtc->State = HAL_RTC_STATE_ERROR;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 15


 774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           /* Process Unlocked */
 776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           __HAL_UNLOCK(hrtc);
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           return HAL_ERROR;
 779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
 780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY;
 784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_OK;
 788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Gets RTC current time.
 793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  sTime: Pointer to Time structure
 796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format
 799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0U, counter_alarm = 0U, days_elapsed = 0U, hours = 0U;
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if ((hrtc == NULL) || (sTime == NULL))
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
 813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check if counter overflow occurred */
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (__HAL_RTC_OVERFLOW_GET_FLAG(hrtc, RTC_FLAG_OW))
 817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Read the time counter*/
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   counter_time = RTC_ReadTimeCounter(hrtc);
 823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hours = counter_time / 3600U;
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sTime->Minutes  = (uint8_t)((counter_time % 3600U) / 60U);
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sTime->Seconds  = (uint8_t)((counter_time % 3600U) % 60U);
 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (hours >= 24U)
 830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 16


 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Get number of days elapsed from last calculation */
 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     days_elapsed = (hours / 24U);
 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set Hours in RTC_TimeTypeDef structure*/
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sTime->Hours = (hours % 24U);
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Read Alarm counter in RTC registers */
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm = RTC_ReadAlarmCounter(hrtc);
 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Calculate remaining time to reach alarm (only if set and not yet expired)*/
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if ((counter_alarm != RTC_ALARM_RESETVALUE) && (counter_alarm > counter_time))
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       counter_alarm -= counter_time;
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     else
 846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* In case of counter_alarm < counter_time */
 848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Alarm expiration already occurred but alarm not deactivated */
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       counter_alarm = RTC_ALARM_RESETVALUE;
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set updated time in decreasing counter by number of days elapsed */
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_time -= (days_elapsed * 24U * 3600U);
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Write time counter in RTC registers */
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (RTC_WriteTimeCounter(hrtc, counter_time) != HAL_OK)
 857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_ERROR;
 859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set updated alarm to be set */
 862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (counter_alarm != RTC_ALARM_RESETVALUE)
 863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       counter_alarm += counter_time;
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Write time counter in RTC registers */
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if (RTC_WriteAlarmCounter(hrtc, counter_alarm) != HAL_OK)
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         return HAL_ERROR;
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     else
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Alarm already occurred. Set it to reset values to avoid unexpected expiration */
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if (RTC_WriteAlarmCounter(hrtc, counter_alarm) != HAL_OK)
 876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         return HAL_ERROR;
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Update date */
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     RTC_DateUpdate(hrtc, days_elapsed);
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sTime->Hours = hours;
 887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 17


 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the input parameters format */
 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (Format != RTC_FORMAT_BIN)
 891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Convert the time structure parameters to BCD format */
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sTime->Hours    = (uint8_t)RTC_ByteToBcd2(sTime->Hours);
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sTime->Minutes  = (uint8_t)RTC_ByteToBcd2(sTime->Minutes);
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sTime->Seconds  = (uint8_t)RTC_ByteToBcd2(sTime->Seconds);
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Sets RTC current date.
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  sDate: Pointer to date structure
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Format: specifies the format of the entered parameters.
 908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format
 910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0U, counter_alarm = 0U, hours = 0U;
 916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if ((hrtc == NULL) || (sDate == NULL))
 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
 924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process Locked */
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
 932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(sDate->Year));
 934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(sDate->Month));
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(sDate->Date));
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Change the current date */
 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Year  = sDate->Year;
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Month = sDate->Month;
 940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Date  = sDate->Date;
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(RTC_Bcd2ToByte(sDate->Year)));
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 18


 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(RTC_Bcd2ToByte(sDate->Month)));
 946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(RTC_Bcd2ToByte(sDate->Date)));
 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Change the current date */
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Year  = RTC_Bcd2ToByte(sDate->Year);
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Month = RTC_Bcd2ToByte(sDate->Month);
 951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Date  = RTC_Bcd2ToByte(sDate->Date);
 952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* WeekDay set by user can be ignored because automatically calculated */
 955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->DateToUpdate.WeekDay = RTC_WeekDayNum(hrtc->DateToUpdate.Year, hrtc->DateToUpdate.Month, hr
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->WeekDay = hrtc->DateToUpdate.WeekDay;
 957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Reset time to be aligned on the same day */
 959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Read the time counter*/
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   counter_time = RTC_ReadTimeCounter(hrtc);
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hours = counter_time / 3600U;
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (hours > 24U)
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set updated time in decreasing counter by number of days elapsed */
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_time -= ((hours / 24U) * 24U * 3600U);
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Write time counter in RTC registers */
 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (RTC_WriteTimeCounter(hrtc, counter_time) != HAL_OK)
 970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Set RTC state */
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Process Unlocked */
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       __HAL_UNLOCK(hrtc);
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_ERROR;
 978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Read current Alarm counter in RTC registers */
 981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm = RTC_ReadAlarmCounter(hrtc);
 982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set again alarm to match with new time if enabled */
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (counter_alarm != RTC_ALARM_RESETVALUE)
 985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if (counter_alarm < counter_time)
 987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Add 1 day to alarm counter*/
 989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         counter_alarm += (uint32_t)(24U * 3600U);
 990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Write new Alarm counter in RTC registers */
 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         if (RTC_WriteAlarmCounter(hrtc, counter_alarm) != HAL_OK)
 993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
 994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           /* Set RTC state */
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           hrtc->State = HAL_RTC_STATE_ERROR;
 996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           /* Process Unlocked */
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           __HAL_UNLOCK(hrtc);
 999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           return HAL_ERROR;
1001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 19


1002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY ;
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process Unlocked */
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Gets RTC current date.
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  sDate: Pointer to Date structure
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN:  Binary data format
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD:  BCD data format
1025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   RTC_TimeTypeDef stime = {0U};
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if ((hrtc == NULL) || (sDate == NULL))
1033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
1038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Call HAL_RTC_GetTime function to update date if counter higher than 24 hours */
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (HAL_RTC_GetTime(hrtc, &stime, RTC_FORMAT_BIN) != HAL_OK)
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
1044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->WeekDay  = hrtc->DateToUpdate.WeekDay;
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->Year     = hrtc->DateToUpdate.Year;
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->Month    = hrtc->DateToUpdate.Month;
1050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->Date     = hrtc->DateToUpdate.Date;
1051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the input parameters format */
1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (Format != RTC_FORMAT_BIN)
1054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Convert the date structure parameters to BCD format */
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sDate->Year   = (uint8_t)RTC_ByteToBcd2(sDate->Year);
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sDate->Month  = (uint8_t)RTC_ByteToBcd2(sDate->Month);
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sDate->Date   = (uint8_t)RTC_ByteToBcd2(sDate->Date);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 20


1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Exported_Functions_Group3 Alarm functions
1068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *  @brief   RTC Alarm functions
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *
1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @verbatim
1071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                  ##### RTC Alarm functions #####
1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  [..] This section provides functions allowing to configure Alarm feature
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @endverbatim
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Sets the specified RTC Alarm.
1083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  sAlarm: Pointer to Alarm structure
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
1087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
1090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Form
1093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_alarm = 0U, counter_time;
1095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   RTC_TimeTypeDef stime = {0U};
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if ((hrtc == NULL) || (sAlarm == NULL))
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
1101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
1104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(sAlarm->Alarm));
1106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process Locked */
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
1109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Call HAL_RTC_GetTime function to update date if counter higher than 24 hours */
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (HAL_RTC_GetTime(hrtc, &stime, RTC_FORMAT_BIN) != HAL_OK)
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 21


1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Convert time in seconds */
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   counter_time = (uint32_t)(((uint32_t)stime.Hours * 3600U) + \
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                             ((uint32_t)stime.Minutes * 60U) + \
1121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                             ((uint32_t)stime.Seconds));
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
1126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm = (uint32_t)(((uint32_t)sAlarm->AlarmTime.Hours * 3600U) + \
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                                ((uint32_t)sAlarm->AlarmTime.Minutes * 60U) + \
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                                ((uint32_t)sAlarm->AlarmTime.Seconds));
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
1136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
1138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm = (((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)) * 3600U) + \
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60U) + \
1141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
1142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check that requested alarm should expire in the same day (otherwise add 1 day) */
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (counter_alarm < counter_time)
1146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Add 1 day to alarm counter*/
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm += (uint32_t)(24U * 3600U);
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Write Alarm counter in RTC registers */
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (RTC_WriteAlarmCounter(hrtc, counter_alarm) != HAL_OK)
1153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
1156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Process Unlocked */
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
1161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY;
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_OK;
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 22


1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Sets the specified RTC Alarm with Interrupt
1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  sAlarm: Pointer to Alarm structure
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @note   The HAL_RTC_SetTime() must be called before enabling the Alarm feature.
1182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm_IT(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t F
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_alarm = 0U, counter_time;
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   RTC_TimeTypeDef stime = {0U};
1188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if ((hrtc == NULL) || (sAlarm == NULL))
1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(sAlarm->Alarm));
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process Locked */
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Call HAL_RTC_GetTime function to update date if counter higher than 24 hours */
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (HAL_RTC_GetTime(hrtc, &stime, RTC_FORMAT_BIN) != HAL_OK)
1206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Convert time in seconds */
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   counter_time = (uint32_t)(((uint32_t)stime.Hours * 3600U) + \
1212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                             ((uint32_t)stime.Minutes * 60U) + \
1213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                             ((uint32_t)stime.Seconds));
1214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
1216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
1218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
1220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm = (uint32_t)(((uint32_t)sAlarm->AlarmTime.Hours * 3600U) + \
1222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                                ((uint32_t)sAlarm->AlarmTime.Minutes * 60U) + \
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                                ((uint32_t)sAlarm->AlarmTime.Seconds));
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 23


1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm = (((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)) * 3600U) + \
1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60U) + \
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check that requested alarm should expire in the same day (otherwise add 1 day) */
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (counter_alarm < counter_time)
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Add 1 day to alarm counter*/
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm += (uint32_t)(24U * 3600U);
1241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Write alarm counter in RTC registers */
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (RTC_WriteAlarmCounter(hrtc, counter_alarm) != HAL_OK)
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Process Unlocked */
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Clear flag alarm A */
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_RTC_ALARM_ENABLE_IT(hrtc, RTC_IT_ALRA);
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* RTC Alarm Interrupt Configuration: EXTI configuration */
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_RTC_ALARM_EXTI_ENABLE_IT();
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_RTC_ALARM_EXTI_ENABLE_RISING_EDGE();
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY;
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_OK;
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Gets the RTC Alarm value and masks.
1277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  sAlarm: Pointer to Date structure
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Alarm: Specifies the Alarm.
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *             @arg RTC_ALARM_A: Alarm
1283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 24


1287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetAlarm(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Alar
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_alarm = 0U;
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
1294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   UNUSED(Alarm);
1295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if ((hrtc == NULL) || (sAlarm == NULL))
1298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(Alarm));
1305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Read Alarm counter in RTC registers */
1307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   counter_alarm = RTC_ReadAlarmCounter(hrtc);
1308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Fill the structure with the read parameters */
1310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set hours in a day range (between 0 to 24)*/
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sAlarm->AlarmTime.Hours   = (uint32_t)((counter_alarm / 3600U) % 24U);
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sAlarm->AlarmTime.Minutes = (uint32_t)((counter_alarm % 3600U) / 60U);
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sAlarm->AlarmTime.Seconds = (uint32_t)((counter_alarm % 3600U) % 60U);
1314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (Format != RTC_FORMAT_BIN)
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sAlarm->AlarmTime.Hours   = RTC_ByteToBcd2(sAlarm->AlarmTime.Hours);
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes);
1319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds);
1320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Deactive the specified RTC Alarm
1327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Alarm: Specifies the Alarm.
1330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_ALARM_A:  AlarmA
1332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_DeactivateAlarm(RTC_HandleTypeDef *hrtc, uint32_t Alarm)
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   UNUSED(Alarm);
1338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
1340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(Alarm));
1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
1343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (hrtc == NULL)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 25


1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
1346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process Locked */
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
1350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */
1354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRA);
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set Initialization mode */
1357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (RTC_EnterInitMode(hrtc) != HAL_OK)
1358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
1361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Process Unlocked */
1363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
1364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
1366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Clear flag alarm A */
1370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
1371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set to default values ALRH & ALRL registers */
1373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->ALRH, RTC_ALARM_RESETVALUE_REGISTER);
1374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->ALRL, RTC_ALARM_RESETVALUE_REGISTER);
1375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* RTC Alarm Interrupt Configuration: Disable EXTI configuration */
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_RTC_ALARM_EXTI_DISABLE_IT();
1378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Wait for synchro */
1380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (RTC_ExitInitMode(hrtc) != HAL_OK)
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
1383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Process Unlocked */
1385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       __HAL_UNLOCK(hrtc);
1386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_ERROR;
1388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
1391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process Unlocked */
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
1394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  This function handles Alarm interrupt request.
1400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 26


1401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval None
1403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** void HAL_RTC_AlarmIRQHandler(RTC_HandleTypeDef *hrtc)
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRA))
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Get the status of the Interrupt */
1409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAF) != (uint32_t)RESET)
1410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* AlarmA callback */
1412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       hrtc->AlarmAEventCallback(hrtc);
1414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #else
1415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       HAL_RTC_AlarmAEventCallback(hrtc);
1416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
1417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Clear the Alarm interrupt pending bit */
1419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
1420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Clear the EXTI's line Flag for RTC Alarm */
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_CLEAR_FLAG();
1425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Change RTC state */
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
1428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Alarm A callback.
1432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval None
1435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** __weak void HAL_RTC_AlarmAEventCallback(RTC_HandleTypeDef *hrtc)
1437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
1439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   UNUSED(hrtc);
1440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****             the HAL_RTC_AlarmAEventCallback could be implemented in the user file
1442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    */
1443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  This function handles AlarmA Polling request.
1447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Timeout: Timeout duration
1450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_PollForAlarmAEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = HAL_GetTick();
1455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
1457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (hrtc == NULL)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 27


1458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
1460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAF) == RESET)
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (Timeout != HAL_MAX_DELAY)
1465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if ((Timeout == 0) || ((HAL_GetTick() - tickstart) > Timeout))
1467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
1469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         return HAL_TIMEOUT;
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Clear the Alarm interrupt pending bit */
1475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
1476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Change RTC state */
1478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
1479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
1485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Exported_Functions_Group4 Peripheral State functions
1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *  @brief   Peripheral State functions
1489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *
1490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @verbatim
1491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
1492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ##### Peripheral State functions #####
1493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     [..]
1495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     This subsection provides functions allowing to
1496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       (+) Get RTC state
1497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @endverbatim
1499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
1500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Returns the RTC state.
1503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL state
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_RTCStateTypeDef HAL_RTC_GetState(RTC_HandleTypeDef *hrtc)
1508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return hrtc->State;
1510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
1514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 28


1515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Exported_Functions_Group5 Peripheral Control functions
1517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *  @brief   Peripheral Control functions
1518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @verbatim
1520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
1521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ##### Peripheral Control functions #####
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
1523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     [..]
1524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     This subsection provides functions allowing to
1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       (+) Wait for RTC Time and Date Synchronization
1526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @endverbatim
1528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
1529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Waits until the RTC registers (RTC_CNT, RTC_ALR and RTC_PRL)
1533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *   are synchronized with RTC APB clock.
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @note   This function must be called before any read operation after an APB reset
1535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *   or an APB clock stop.
1536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_WaitForSynchro(RTC_HandleTypeDef *hrtc)
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = 0U;
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (hrtc == NULL)
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
1548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Clear RSF flag */
1551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   CLEAR_BIT(hrtc->Instance->CRL, RTC_FLAG_RSF);
1552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   tickstart = HAL_GetTick();
1554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Wait the registers to be synchronised */
1556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   while ((hrtc->Instance->CRL & RTC_FLAG_RSF) == (uint32_t)RESET)
1557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if ((HAL_GetTick() - tickstart) >  RTC_TIMEOUT_VALUE)
1559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_TIMEOUT;
1561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
1569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 29


1572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
1574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @addtogroup RTC_Private_Functions
1577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
1578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Read the time counter available in RTC_CNT registers.
1583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval Time counter
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint32_t RTC_ReadTimeCounter(RTC_HandleTypeDef *hrtc)
1588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
  27              		.loc 1 1588 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33 0000 30B4     		push	{r4, r5}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 5, -4
  38              	.LVL1:
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint16_t high1 = 0U, high2 = 0U, low = 0U;
1590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t timecounter = 0U;
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   high1 = READ_REG(hrtc->Instance->CNTH & RTC_CNTH_RTC_CNT);
  39              		.loc 1 1592 0
  40 0002 0268     		ldr	r2, [r0]
  41 0004 9169     		ldr	r1, [r2, #24]
  42 0006 8DB2     		uxth	r5, r1
  43              	.LVL2:
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   low   = READ_REG(hrtc->Instance->CNTL & RTC_CNTL_RTC_CNT);
  44              		.loc 1 1593 0
  45 0008 D369     		ldr	r3, [r2, #28]
  46              	.LVL3:
1594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   high2 = READ_REG(hrtc->Instance->CNTH & RTC_CNTH_RTC_CNT);
  47              		.loc 1 1594 0
  48 000a 9069     		ldr	r0, [r2, #24]
  49              	.LVL4:
  50 000c 84B2     		uxth	r4, r0
  51              	.LVL5:
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (high1 != high2)
  52              		.loc 1 1596 0
  53 000e A542     		cmp	r5, r4
  54 0010 04D0     		beq	.L2
1597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* In this case the counter roll over during reading of CNTL and CNTH registers,
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        read again CNTL register then return the counter value */
1600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     timecounter = (((uint32_t) high2 << 16U) | READ_REG(hrtc->Instance->CNTL & RTC_CNTL_RTC_CNT));
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 30


  55              		.loc 1 1600 0
  56 0012 D369     		ldr	r3, [r2, #28]
  57              	.LVL6:
  58 0014 9BB2     		uxth	r3, r3
  59 0016 43EA0040 		orr	r0, r3, r0, lsl #16
  60              	.LVL7:
  61 001a 02E0     		b	.L3
  62              	.LVL8:
  63              	.L2:
1601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* No counter roll over during reading of CNTL and CNTH registers, counter
1605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        value is equal to first value of CNTL and CNTH */
1606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     timecounter = (((uint32_t) high1 << 16U) | low);
  64              		.loc 1 1606 0
  65 001c 9BB2     		uxth	r3, r3
  66 001e 43EA0140 		orr	r0, r3, r1, lsl #16
  67              	.LVL9:
  68              	.L3:
1607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return timecounter;
1610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
  69              		.loc 1 1610 0
  70 0022 30BC     		pop	{r4, r5}
  71              	.LCFI1:
  72              		.cfi_restore 5
  73              		.cfi_restore 4
  74              		.cfi_def_cfa_offset 0
  75              	.LVL10:
  76 0024 7047     		bx	lr
  77              		.cfi_endproc
  78              	.LFE82:
  80 0026 00BF     		.section	.text.RTC_ReadAlarmCounter,"ax",%progbits
  81              		.align	2
  82              		.thumb
  83              		.thumb_func
  85              	RTC_ReadAlarmCounter:
  86              	.LFB84:
1611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Write the time counter in RTC_CNT registers.
1614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  TimeCounter: Counter to write in RTC_CNT registers
1617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef RTC_WriteTimeCounter(RTC_HandleTypeDef *hrtc, uint32_t TimeCounter)
1620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
1622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set Initialization mode */
1624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (RTC_EnterInitMode(hrtc) != HAL_OK)
1625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     status = HAL_ERROR;
1627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 31


1628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC COUNTER MSB word */
1631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->CNTH, (TimeCounter >> 16U));
1632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC COUNTER LSB word */
1633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->CNTL, (TimeCounter & RTC_CNTL_RTC_CNT));
1634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Wait for synchro */
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (RTC_ExitInitMode(hrtc) != HAL_OK)
1637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       status = HAL_ERROR;
1639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return status;
1643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Read the time counter available in RTC_ALR registers.
1647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval Time counter
1650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint32_t RTC_ReadAlarmCounter(RTC_HandleTypeDef *hrtc)
1652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
  87              		.loc 1 1652 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
  92              	.LVL11:
1653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint16_t high1 = 0U, low = 0U;
1654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   high1 = READ_REG(hrtc->Instance->ALRH & RTC_CNTH_RTC_CNT);
  93              		.loc 1 1655 0
  94 0000 0368     		ldr	r3, [r0]
  95 0002 186A     		ldr	r0, [r3, #32]
  96              	.LVL12:
1656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   low   = READ_REG(hrtc->Instance->ALRL & RTC_CNTL_RTC_CNT);
  97              		.loc 1 1656 0
  98 0004 5B6A     		ldr	r3, [r3, #36]
  99              	.LVL13:
1657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return (((uint32_t) high1 << 16U) | low);
 100              		.loc 1 1658 0
 101 0006 9BB2     		uxth	r3, r3
1659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 102              		.loc 1 1659 0
 103 0008 43EA0040 		orr	r0, r3, r0, lsl #16
 104              	.LVL14:
 105 000c 7047     		bx	lr
 106              		.cfi_endproc
 107              	.LFE84:
 109 000e 00BF     		.section	.text.RTC_ByteToBcd2,"ax",%progbits
 110              		.align	2
 111              		.thumb
 112              		.thumb_func
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 32


 114              	RTC_ByteToBcd2:
 115              	.LFB88:
1660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Write the time counter in RTC_ALR registers.
1663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  AlarmCounter: Counter to write in RTC_ALR registers
1666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef RTC_WriteAlarmCounter(RTC_HandleTypeDef *hrtc, uint32_t AlarmCounter)
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
1671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set Initialization mode */
1673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (RTC_EnterInitMode(hrtc) != HAL_OK)
1674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     status = HAL_ERROR;
1676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC COUNTER MSB word */
1680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->ALRH, (AlarmCounter >> 16U));
1681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC COUNTER LSB word */
1682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->ALRL, (AlarmCounter & RTC_ALRL_RTC_ALR));
1683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Wait for synchro */
1685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (RTC_ExitInitMode(hrtc) != HAL_OK)
1686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       status = HAL_ERROR;
1688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return status;
1692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Enters the RTC Initialization mode.
1696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef RTC_EnterInitMode(RTC_HandleTypeDef *hrtc)
1701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = 0U;
1703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   tickstart = HAL_GetTick();
1705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Wait till RTC is in INIT state and if Time out is reached exit */
1706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   while ((hrtc->Instance->CRL & RTC_CRL_RTOFF) == (uint32_t)RESET)
1707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if ((HAL_GetTick() - tickstart) >  RTC_TIMEOUT_VALUE)
1709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_TIMEOUT;
1711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 33


1715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
1719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Exit the RTC Initialization mode.
1723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef RTC_ExitInitMode(RTC_HandleTypeDef *hrtc)
1728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = 0U;
1730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   tickstart = HAL_GetTick();
1735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Wait till RTC is in INIT state and if Time out is reached exit */
1736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   while ((hrtc->Instance->CRL & RTC_CRL_RTOFF) == (uint32_t)RESET)
1737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if ((HAL_GetTick() - tickstart) >  RTC_TIMEOUT_VALUE)
1739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_TIMEOUT;
1741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
1745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Converts a 2 digit decimal to BCD format.
1749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Value: Byte to be converted
1750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval Converted byte
1751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t RTC_ByteToBcd2(uint8_t Value)
1753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 116              		.loc 1 1753 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 121              	.LVL15:
1754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t bcdhigh = 0U;
 122              		.loc 1 1754 0
 123 0000 0023     		movs	r3, #0
1755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   while (Value >= 10U)
 124              		.loc 1 1756 0
 125 0002 02E0     		b	.L7
 126              	.LVL16:
 127              	.L8:
1757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     bcdhigh++;
 128              		.loc 1 1758 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 34


 129 0004 0133     		adds	r3, r3, #1
 130              	.LVL17:
1759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     Value -= 10U;
 131              		.loc 1 1759 0
 132 0006 0A38     		subs	r0, r0, #10
 133              	.LVL18:
 134 0008 C0B2     		uxtb	r0, r0
 135              	.LVL19:
 136              	.L7:
1756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 137              		.loc 1 1756 0
 138 000a 0928     		cmp	r0, #9
 139 000c FAD8     		bhi	.L8
1760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return ((uint8_t)(bcdhigh << 4U) | Value);
 140              		.loc 1 1762 0
 141 000e 1B01     		lsls	r3, r3, #4
 142              	.LVL20:
 143 0010 DBB2     		uxtb	r3, r3
1763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 144              		.loc 1 1763 0
 145 0012 1843     		orrs	r0, r0, r3
 146              	.LVL21:
 147 0014 7047     		bx	lr
 148              		.cfi_endproc
 149              	.LFE88:
 151 0016 00BF     		.section	.text.RTC_Bcd2ToByte,"ax",%progbits
 152              		.align	2
 153              		.thumb
 154              		.thumb_func
 156              	RTC_Bcd2ToByte:
 157              	.LFB89:
1764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Converts from 2 digit BCD to Binary.
1767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Value: BCD value to be converted
1768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval Converted word
1769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t RTC_Bcd2ToByte(uint8_t Value)
1771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 158              		.loc 1 1771 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 163              	.LVL22:
1772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tmp = 0U;
1773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   tmp = ((uint8_t)(Value & (uint8_t)0xF0) >> (uint8_t)0x4) * 10U;
 164              		.loc 1 1773 0
 165 0000 0309     		lsrs	r3, r0, #4
 166 0002 03EB8303 		add	r3, r3, r3, lsl #2
 167 0006 5A00     		lsls	r2, r3, #1
 168              	.LVL23:
1774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 169              		.loc 1 1774 0
 170 0008 00F00F00 		and	r0, r0, #15
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 35


 171              	.LVL24:
 172 000c 1044     		add	r0, r0, r2
1775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 173              		.loc 1 1775 0
 174 000e C0B2     		uxtb	r0, r0
 175 0010 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE89:
 179 0012 00BF     		.section	.text.RTC_IsLeapYear,"ax",%progbits
 180              		.align	2
 181              		.thumb
 182              		.thumb_func
 184              	RTC_IsLeapYear:
 185              	.LFB91:
1776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Updates date when time is 23:59:59.
1779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  DayElapsed: Number of days elapsed from last date update
1782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval None
1783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static void RTC_DateUpdate(RTC_HandleTypeDef *hrtc, uint32_t DayElapsed)
1785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t year = 0U, month = 0U, day = 0U;
1787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t loop = 0U;
1788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Get the current year*/
1790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   year = hrtc->DateToUpdate.Year;
1791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Get the current month and day */
1793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   month = hrtc->DateToUpdate.Month;
1794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   day = hrtc->DateToUpdate.Date;
1795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   for (loop = 0U; loop < DayElapsed; loop++)
1797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if ((month == 1U) || (month == 3U) || (month == 5U) || (month == 7U) || \
1799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         (month == 8U) || (month == 10U) || (month == 12U))
1800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if (day < 31U)
1802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         day++;
1804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Date structure member: day = 31 */
1806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       else
1807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         if (month != 12U)
1809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
1810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           month++;
1811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           day = 1U;
1812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
1813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Date structure member: day = 31 & month =12 */
1814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         else
1815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
1816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           month = 1U;
1817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           day = 1U;
1818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           year++;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 36


1819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
1820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     else if ((month == 4U) || (month == 6U) || (month == 9U) || (month == 11U))
1823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if (day < 30U)
1825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         day++;
1827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Date structure member: day = 30 */
1829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       else
1830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         month++;
1832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         day = 1U;
1833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     else if (month == 2U)
1836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if (day < 28U)
1838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         day++;
1840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       else if (day == 28U)
1842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Leap year */
1844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         if (RTC_IsLeapYear(year))
1845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
1846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           day++;
1847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
1848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         else
1849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
1850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           month++;
1851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           day = 1U;
1852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
1853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       else if (day == 29U)
1855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         month++;
1857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         day = 1U;
1858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Update year */
1863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->DateToUpdate.Year = year;
1864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Update day and month */
1866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->DateToUpdate.Month = month;
1867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->DateToUpdate.Date = day;
1868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Update day of the week */
1870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->DateToUpdate.WeekDay = RTC_WeekDayNum(year, month, day);
1871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Check whether the passed year is Leap or not.
1875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  nYear  year to check
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 37


1876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval 1: leap year
1877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         0: not leap year
1878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t RTC_IsLeapYear(uint16_t nYear)
1880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 186              		.loc 1 1880 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 191              	.LVL25:
1881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if ((nYear % 4U) != 0U)
 192              		.loc 1 1881 0
 193 0000 10F0030F 		tst	r0, #3
 194 0004 14D1     		bne	.L12
1882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return 0U;
1884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if ((nYear % 100U) != 0U)
 195              		.loc 1 1886 0
 196 0006 0D4B     		ldr	r3, .L15
 197 0008 A3FB0023 		umull	r2, r3, r3, r0
 198 000c 5B09     		lsrs	r3, r3, #5
 199 000e 6422     		movs	r2, #100
 200 0010 02FB1303 		mls	r3, r2, r3, r0
 201 0014 9BB2     		uxth	r3, r3
 202 0016 6BB9     		cbnz	r3, .L13
1887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return 1U;
1889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if ((nYear % 400U) == 0U)
 203              		.loc 1 1891 0
 204 0018 084B     		ldr	r3, .L15
 205 001a A3FB0023 		umull	r2, r3, r3, r0
 206 001e DB09     		lsrs	r3, r3, #7
 207 0020 4FF4C872 		mov	r2, #400
 208 0024 02FB1300 		mls	r0, r2, r3, r0
 209              	.LVL26:
 210 0028 80B2     		uxth	r0, r0
 211 002a 28B9     		cbnz	r0, .L14
1892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return 1U;
 212              		.loc 1 1893 0
 213 002c 0120     		movs	r0, #1
 214 002e 7047     		bx	lr
 215              	.LVL27:
 216              	.L12:
1883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 217              		.loc 1 1883 0
 218 0030 0020     		movs	r0, #0
 219              	.LVL28:
 220 0032 7047     		bx	lr
 221              	.LVL29:
 222              	.L13:
1888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 38


 223              		.loc 1 1888 0
 224 0034 0120     		movs	r0, #1
 225              	.LVL30:
 226 0036 7047     		bx	lr
 227              	.L14:
1894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return 0U;
 228              		.loc 1 1897 0
 229 0038 0020     		movs	r0, #0
1898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 230              		.loc 1 1899 0
 231 003a 7047     		bx	lr
 232              	.L16:
 233              		.align	2
 234              	.L15:
 235 003c 1F85EB51 		.word	1374389535
 236              		.cfi_endproc
 237              	.LFE91:
 239              		.section	.text.RTC_WeekDayNum,"ax",%progbits
 240              		.align	2
 241              		.thumb
 242              		.thumb_func
 244              	RTC_WeekDayNum:
 245              	.LFB92:
1900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Determines the week number, the day number and the week day number.
1903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  nYear   year to check
1904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  nMonth  Month to check
1905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  nDay    Day to check
1906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @note   Day is calculated with hypothesis that year > 2000
1907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval Value which can take one of the following parameters:
1908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         @arg RTC_WEEKDAY_MONDAY
1909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         @arg RTC_WEEKDAY_TUESDAY
1910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         @arg RTC_WEEKDAY_WEDNESDAY
1911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         @arg RTC_WEEKDAY_THURSDAY
1912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         @arg RTC_WEEKDAY_FRIDAY
1913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         @arg RTC_WEEKDAY_SATURDAY
1914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         @arg RTC_WEEKDAY_SUNDAY
1915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t RTC_WeekDayNum(uint32_t nYear, uint8_t nMonth, uint8_t nDay)
1917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 246              		.loc 1 1917 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250              		@ link register save eliminated.
 251              	.LVL31:
 252 0000 10B4     		push	{r4}
 253              	.LCFI2:
 254              		.cfi_def_cfa_offset 4
 255              		.cfi_offset 4, -4
 256              	.LVL32:
1918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t year = 0U, weekday = 0U;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 39


1919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   year = 2000U + nYear;
 257              		.loc 1 1920 0
 258 0002 00F5FA64 		add	r4, r0, #2000
 259              	.LVL33:
1921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (nMonth < 3U)
 260              		.loc 1 1922 0
 261 0006 0229     		cmp	r1, #2
 262 0008 20D8     		bhi	.L18
1923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /*D = { [(23 x month)/9] + day + 4 + year + [(year-1)/4] - [(year-1)/100] + [(year-1)/400] } mo
1925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     weekday = (((23U * nMonth) / 9U) + nDay + 4U + year + ((year - 1U) / 4U) - ((year - 1U) / 100U)
 263              		.loc 1 1925 0
 264 000a 01EB4103 		add	r3, r1, r1, lsl #1
 265 000e C1EBC301 		rsb	r1, r1, r3, lsl #3
 266              	.LVL34:
 267 0012 1F4B     		ldr	r3, .L21
 268 0014 A3FB0131 		umull	r3, r1, r3, r1
 269 0018 02EB5102 		add	r2, r2, r1, lsr #1
 270              	.LVL35:
 271 001c 2244     		add	r2, r2, r4
 272 001e 00F2CF70 		addw	r0, r0, #1999
 273              	.LVL36:
 274 0022 02EB9002 		add	r2, r2, r0, lsr #2
 275 0026 1B4B     		ldr	r3, .L21+4
 276 0028 A3FB0013 		umull	r1, r3, r3, r0
 277 002c A2EB5312 		sub	r2, r2, r3, lsr #5
 278 0030 02EBD313 		add	r3, r2, r3, lsr #7
 279 0034 0433     		adds	r3, r3, #4
 280 0036 1848     		ldr	r0, .L21+8
 281              	.LVL37:
 282 0038 A3FB0001 		umull	r0, r1, r3, r0
 283 003c 581A     		subs	r0, r3, r1
 284 003e 01EB5000 		add	r0, r1, r0, lsr #1
 285 0042 8008     		lsrs	r0, r0, #2
 286 0044 C0EBC000 		rsb	r0, r0, r0, lsl #3
 287 0048 181A     		subs	r0, r3, r0
 288              	.LVL38:
 289 004a 1DE0     		b	.L19
 290              	.LVL39:
 291              	.L18:
1926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /*D = { [(23 x month)/9] + day + 4 + year + [year/4] - [year/100] + [year/400] - 2 } mod 7*/
1930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     weekday = (((23U * nMonth) / 9U) + nDay + 4U + year + (year / 4U) - (year / 100U) + (year / 400
 292              		.loc 1 1930 0
 293 004c 01EB4103 		add	r3, r1, r1, lsl #1
 294 0050 C1EBC301 		rsb	r1, r1, r3, lsl #3
 295              	.LVL40:
 296 0054 0E4B     		ldr	r3, .L21
 297 0056 A3FB0113 		umull	r1, r3, r3, r1
 298 005a 02EB5302 		add	r2, r2, r3, lsr #1
 299              	.LVL41:
 300 005e A318     		adds	r3, r4, r2
 301 0060 03EB9402 		add	r2, r3, r4, lsr #2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 40


 302 0064 0B4B     		ldr	r3, .L21+4
 303 0066 A3FB0434 		umull	r3, r4, r3, r4
 304              	.LVL42:
 305 006a A2EB5413 		sub	r3, r2, r4, lsr #5
 306 006e 03EBD413 		add	r3, r3, r4, lsr #7
 307 0072 0233     		adds	r3, r3, #2
 308 0074 0848     		ldr	r0, .L21+8
 309              	.LVL43:
 310 0076 A3FB0001 		umull	r0, r1, r3, r0
 311 007a 581A     		subs	r0, r3, r1
 312 007c 01EB5000 		add	r0, r1, r0, lsr #1
 313 0080 8008     		lsrs	r0, r0, #2
 314 0082 C0EBC000 		rsb	r0, r0, r0, lsl #3
 315 0086 181A     		subs	r0, r3, r0
 316              	.LVL44:
 317              	.L19:
1931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return (uint8_t)weekday;
1934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 318              		.loc 1 1934 0
 319 0088 C0B2     		uxtb	r0, r0
 320              	.LVL45:
 321 008a 10BC     		pop	{r4}
 322              	.LCFI3:
 323              		.cfi_restore 4
 324              		.cfi_def_cfa_offset 0
 325 008c 7047     		bx	lr
 326              	.L22:
 327 008e 00BF     		.align	2
 328              	.L21:
 329 0090 398EE338 		.word	954437177
 330 0094 1F85EB51 		.word	1374389535
 331 0098 25499224 		.word	613566757
 332              		.cfi_endproc
 333              	.LFE92:
 335              		.section	.text.RTC_DateUpdate,"ax",%progbits
 336              		.align	2
 337              		.thumb
 338              		.thumb_func
 340              	RTC_DateUpdate:
 341              	.LFB90:
1785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t year = 0U, month = 0U, day = 0U;
 342              		.loc 1 1785 0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 0, uses_anonymous_args = 0
 346              	.LVL46:
 347 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 348              	.LCFI4:
 349              		.cfi_def_cfa_offset 32
 350              		.cfi_offset 3, -32
 351              		.cfi_offset 4, -28
 352              		.cfi_offset 5, -24
 353              		.cfi_offset 6, -20
 354              		.cfi_offset 7, -16
 355              		.cfi_offset 8, -12
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 41


 356              		.cfi_offset 9, -8
 357              		.cfi_offset 14, -4
 358 0004 8046     		mov	r8, r0
 359 0006 0F46     		mov	r7, r1
 360              	.LVL47:
1790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 361              		.loc 1 1790 0
 362 0008 90F80F90 		ldrb	r9, [r0, #15]	@ zero_extendqisi2
 363              	.LVL48:
1793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   day = hrtc->DateToUpdate.Date;
 364              		.loc 1 1793 0
 365 000c 447B     		ldrb	r4, [r0, #13]	@ zero_extendqisi2
 366              	.LVL49:
1794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 367              		.loc 1 1794 0
 368 000e 867B     		ldrb	r6, [r0, #14]	@ zero_extendqisi2
 369              	.LVL50:
1796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 370              		.loc 1 1796 0
 371 0010 0025     		movs	r5, #0
 372 0012 41E0     		b	.L24
 373              	.LVL51:
 374              	.L36:
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         (month == 8U) || (month == 10U) || (month == 12U))
 375              		.loc 1 1798 0
 376 0014 012C     		cmp	r4, #1
 377 0016 0BD0     		beq	.L25
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         (month == 8U) || (month == 10U) || (month == 12U))
 378              		.loc 1 1798 0 is_stmt 0 discriminator 1
 379 0018 032C     		cmp	r4, #3
 380 001a 09D0     		beq	.L25
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         (month == 8U) || (month == 10U) || (month == 12U))
 381              		.loc 1 1798 0 discriminator 2
 382 001c 052C     		cmp	r4, #5
 383 001e 07D0     		beq	.L25
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         (month == 8U) || (month == 10U) || (month == 12U))
 384              		.loc 1 1798 0 discriminator 3
 385 0020 072C     		cmp	r4, #7
 386 0022 05D0     		beq	.L25
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         (month == 8U) || (month == 10U) || (month == 12U))
 387              		.loc 1 1798 0 discriminator 4
 388 0024 082C     		cmp	r4, #8
 389 0026 03D0     		beq	.L25
1799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 390              		.loc 1 1799 0 is_stmt 1
 391 0028 0A2C     		cmp	r4, #10
 392 002a 01D0     		beq	.L25
1799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 393              		.loc 1 1799 0 is_stmt 0 discriminator 1
 394 002c 0C2C     		cmp	r4, #12
 395 002e 0DD1     		bne	.L26
 396              	.L25:
1801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 397              		.loc 1 1801 0 is_stmt 1
 398 0030 1E2E     		cmp	r6, #30
 399 0032 01D8     		bhi	.L27
1803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 42


 400              		.loc 1 1803 0
 401 0034 0136     		adds	r6, r6, #1
 402              	.LVL52:
 403 0036 2EE0     		b	.L28
 404              	.L27:
1808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
 405              		.loc 1 1808 0
 406 0038 0C2C     		cmp	r4, #12
 407 003a 02D0     		beq	.L29
1810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           day = 1U;
 408              		.loc 1 1810 0
 409 003c 0134     		adds	r4, r4, #1
 410              	.LVL53:
1811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
 411              		.loc 1 1811 0
 412 003e 0126     		movs	r6, #1
 413 0040 29E0     		b	.L28
 414              	.LVL54:
 415              	.L29:
1818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
 416              		.loc 1 1818 0
 417 0042 09F10109 		add	r9, r9, #1
 418              	.LVL55:
1817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           year++;
 419              		.loc 1 1817 0
 420 0046 0126     		movs	r6, #1
1816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           day = 1U;
 421              		.loc 1 1816 0
 422 0048 3446     		mov	r4, r6
 423 004a 24E0     		b	.L28
 424              	.LVL56:
 425              	.L26:
1822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 426              		.loc 1 1822 0
 427 004c 042C     		cmp	r4, #4
 428 004e 05D0     		beq	.L30
1822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 429              		.loc 1 1822 0 is_stmt 0 discriminator 1
 430 0050 062C     		cmp	r4, #6
 431 0052 03D0     		beq	.L30
1822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 432              		.loc 1 1822 0 discriminator 2
 433 0054 092C     		cmp	r4, #9
 434 0056 01D0     		beq	.L30
1822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 435              		.loc 1 1822 0 discriminator 3
 436 0058 0B2C     		cmp	r4, #11
 437 005a 06D1     		bne	.L31
 438              	.L30:
1824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 439              		.loc 1 1824 0 is_stmt 1
 440 005c 1D2E     		cmp	r6, #29
 441 005e 01D8     		bhi	.L32
1826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 442              		.loc 1 1826 0
 443 0060 0136     		adds	r6, r6, #1
 444              	.LVL57:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 43


 445 0062 18E0     		b	.L28
 446              	.L32:
1831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         day = 1U;
 447              		.loc 1 1831 0
 448 0064 0134     		adds	r4, r4, #1
 449              	.LVL58:
1832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 450              		.loc 1 1832 0
 451 0066 0126     		movs	r6, #1
 452 0068 15E0     		b	.L28
 453              	.LVL59:
 454              	.L31:
1835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 455              		.loc 1 1835 0
 456 006a 022C     		cmp	r4, #2
 457 006c 13D1     		bne	.L28
1837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 458              		.loc 1 1837 0
 459 006e 1B2E     		cmp	r6, #27
 460 0070 01D8     		bhi	.L33
1839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 461              		.loc 1 1839 0
 462 0072 0136     		adds	r6, r6, #1
 463              	.LVL60:
 464 0074 0FE0     		b	.L28
 465              	.L33:
1841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 466              		.loc 1 1841 0
 467 0076 1C2E     		cmp	r6, #28
 468 0078 09D1     		bne	.L34
1844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
 469              		.loc 1 1844 0
 470 007a 1FFA89F0 		uxth	r0, r9
 471 007e FFF7FEFF 		bl	RTC_IsLeapYear
 472              	.LVL61:
 473 0082 08B1     		cbz	r0, .L35
1846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
 474              		.loc 1 1846 0
 475 0084 0136     		adds	r6, r6, #1
 476              	.LVL62:
 477 0086 06E0     		b	.L28
 478              	.L35:
1850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           day = 1U;
 479              		.loc 1 1850 0
 480 0088 0134     		adds	r4, r4, #1
 481              	.LVL63:
1851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
 482              		.loc 1 1851 0
 483 008a 0126     		movs	r6, #1
 484 008c 03E0     		b	.L28
 485              	.LVL64:
 486              	.L34:
1854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 487              		.loc 1 1854 0
 488 008e 1D2E     		cmp	r6, #29
 489 0090 01D1     		bne	.L28
1856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         day = 1U;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 44


 490              		.loc 1 1856 0
 491 0092 0134     		adds	r4, r4, #1
 492              	.LVL65:
1857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 493              		.loc 1 1857 0
 494 0094 0126     		movs	r6, #1
 495              	.LVL66:
 496              	.L28:
1796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 497              		.loc 1 1796 0 discriminator 2
 498 0096 0135     		adds	r5, r5, #1
 499              	.LVL67:
 500              	.L24:
1796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 501              		.loc 1 1796 0 is_stmt 0 discriminator 1
 502 0098 BD42     		cmp	r5, r7
 503 009a BBD3     		bcc	.L36
1863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 504              		.loc 1 1863 0 is_stmt 1
 505 009c 88F80F90 		strb	r9, [r8, #15]
1866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->DateToUpdate.Date = day;
 506              		.loc 1 1866 0
 507 00a0 E1B2     		uxtb	r1, r4
 508 00a2 88F80D10 		strb	r1, [r8, #13]
1867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 509              		.loc 1 1867 0
 510 00a6 F2B2     		uxtb	r2, r6
 511 00a8 88F80E20 		strb	r2, [r8, #14]
1870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 512              		.loc 1 1870 0
 513 00ac 4846     		mov	r0, r9
 514 00ae FFF7FEFF 		bl	RTC_WeekDayNum
 515              	.LVL68:
 516 00b2 88F80C00 		strb	r0, [r8, #12]
 517 00b6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 518              		.cfi_endproc
 519              	.LFE90:
 521 00ba 00BF     		.section	.text.RTC_EnterInitMode,"ax",%progbits
 522              		.align	2
 523              		.thumb
 524              		.thumb_func
 526              	RTC_EnterInitMode:
 527              	.LFB86:
1701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 528              		.loc 1 1701 0
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 0
 531              		@ frame_needed = 0, uses_anonymous_args = 0
 532              	.LVL69:
 533 0000 38B5     		push	{r3, r4, r5, lr}
 534              	.LCFI5:
 535              		.cfi_def_cfa_offset 16
 536              		.cfi_offset 3, -16
 537              		.cfi_offset 4, -12
 538              		.cfi_offset 5, -8
 539              		.cfi_offset 14, -4
 540 0002 0446     		mov	r4, r0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 45


 541              	.LVL70:
1704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Wait till RTC is in INIT state and if Time out is reached exit */
 542              		.loc 1 1704 0
 543 0004 FFF7FEFF 		bl	HAL_GetTick
 544              	.LVL71:
 545 0008 0546     		mov	r5, r0
 546              	.LVL72:
1706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 547              		.loc 1 1706 0
 548 000a 05E0     		b	.L39
 549              	.LVL73:
 550              	.L41:
1708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 551              		.loc 1 1708 0
 552 000c FFF7FEFF 		bl	HAL_GetTick
 553              	.LVL74:
 554 0010 401B     		subs	r0, r0, r5
 555 0012 B0F57A7F 		cmp	r0, #1000
 556 0016 0AD8     		bhi	.L42
 557              	.L39:
1706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 558              		.loc 1 1706 0
 559 0018 2368     		ldr	r3, [r4]
 560 001a 5A68     		ldr	r2, [r3, #4]
 561 001c 12F0200F 		tst	r2, #32
 562 0020 F4D0     		beq	.L41
1715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 563              		.loc 1 1715 0
 564 0022 5A68     		ldr	r2, [r3, #4]
 565 0024 42F01002 		orr	r2, r2, #16
 566 0028 5A60     		str	r2, [r3, #4]
1718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 567              		.loc 1 1718 0
 568 002a 0020     		movs	r0, #0
 569 002c 38BD     		pop	{r3, r4, r5, pc}
 570              	.LVL75:
 571              	.L42:
1710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 572              		.loc 1 1710 0
 573 002e 0320     		movs	r0, #3
1719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 574              		.loc 1 1719 0
 575 0030 38BD     		pop	{r3, r4, r5, pc}
 576              		.cfi_endproc
 577              	.LFE86:
 579 0032 00BF     		.section	.text.RTC_ExitInitMode,"ax",%progbits
 580              		.align	2
 581              		.thumb
 582              		.thumb_func
 584              	RTC_ExitInitMode:
 585              	.LFB87:
1728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 586              		.loc 1 1728 0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 0
 589              		@ frame_needed = 0, uses_anonymous_args = 0
 590              	.LVL76:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 46


 591 0000 38B5     		push	{r3, r4, r5, lr}
 592              	.LCFI6:
 593              		.cfi_def_cfa_offset 16
 594              		.cfi_offset 3, -16
 595              		.cfi_offset 4, -12
 596              		.cfi_offset 5, -8
 597              		.cfi_offset 14, -4
 598 0002 0446     		mov	r4, r0
 599              	.LVL77:
1732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 600              		.loc 1 1732 0
 601 0004 0268     		ldr	r2, [r0]
 602 0006 5368     		ldr	r3, [r2, #4]
 603 0008 23F01003 		bic	r3, r3, #16
 604 000c 5360     		str	r3, [r2, #4]
1734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Wait till RTC is in INIT state and if Time out is reached exit */
 605              		.loc 1 1734 0
 606 000e FFF7FEFF 		bl	HAL_GetTick
 607              	.LVL78:
 608 0012 0546     		mov	r5, r0
 609              	.LVL79:
1736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 610              		.loc 1 1736 0
 611 0014 05E0     		b	.L45
 612              	.LVL80:
 613              	.L47:
1738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 614              		.loc 1 1738 0
 615 0016 FFF7FEFF 		bl	HAL_GetTick
 616              	.LVL81:
 617 001a 401B     		subs	r0, r0, r5
 618 001c B0F57A7F 		cmp	r0, #1000
 619 0020 06D8     		bhi	.L48
 620              	.L45:
1736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 621              		.loc 1 1736 0
 622 0022 2368     		ldr	r3, [r4]
 623 0024 5B68     		ldr	r3, [r3, #4]
 624 0026 13F0200F 		tst	r3, #32
 625 002a F4D0     		beq	.L47
1744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 626              		.loc 1 1744 0
 627 002c 0020     		movs	r0, #0
 628 002e 38BD     		pop	{r3, r4, r5, pc}
 629              	.LVL82:
 630              	.L48:
1740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 631              		.loc 1 1740 0
 632 0030 0320     		movs	r0, #3
1745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 633              		.loc 1 1745 0
 634 0032 38BD     		pop	{r3, r4, r5, pc}
 635              		.cfi_endproc
 636              	.LFE87:
 638              		.section	.text.RTC_WriteTimeCounter,"ax",%progbits
 639              		.align	2
 640              		.thumb
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 47


 641              		.thumb_func
 643              	RTC_WriteTimeCounter:
 644              	.LFB83:
1620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
 645              		.loc 1 1620 0
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 0
 648              		@ frame_needed = 0, uses_anonymous_args = 0
 649              	.LVL83:
 650 0000 38B5     		push	{r3, r4, r5, lr}
 651              	.LCFI7:
 652              		.cfi_def_cfa_offset 16
 653              		.cfi_offset 3, -16
 654              		.cfi_offset 4, -12
 655              		.cfi_offset 5, -8
 656              		.cfi_offset 14, -4
 657 0002 0546     		mov	r5, r0
 658 0004 0C46     		mov	r4, r1
 659              	.LVL84:
1624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 660              		.loc 1 1624 0
 661 0006 FFF7FEFF 		bl	RTC_EnterInitMode
 662              	.LVL85:
 663 000a 50B9     		cbnz	r0, .L52
1631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC COUNTER LSB word */
 664              		.loc 1 1631 0
 665 000c 2B68     		ldr	r3, [r5]
 666 000e 220C     		lsrs	r2, r4, #16
 667 0010 9A61     		str	r2, [r3, #24]
1633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 668              		.loc 1 1633 0
 669 0012 2B68     		ldr	r3, [r5]
 670 0014 A4B2     		uxth	r4, r4
 671              	.LVL86:
 672 0016 DC61     		str	r4, [r3, #28]
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 673              		.loc 1 1636 0
 674 0018 2846     		mov	r0, r5
 675 001a FFF7FEFF 		bl	RTC_ExitInitMode
 676              	.LVL87:
 677 001e 10B9     		cbnz	r0, .L53
 678 0020 38BD     		pop	{r3, r4, r5, pc}
 679              	.LVL88:
 680              	.L52:
1626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 681              		.loc 1 1626 0
 682 0022 0120     		movs	r0, #1
 683 0024 38BD     		pop	{r3, r4, r5, pc}
 684              	.LVL89:
 685              	.L53:
1638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 686              		.loc 1 1638 0
 687 0026 0120     		movs	r0, #1
 688              	.LVL90:
1643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 689              		.loc 1 1643 0
 690 0028 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 48


 691              		.cfi_endproc
 692              	.LFE83:
 694 002a 00BF     		.section	.text.RTC_WriteAlarmCounter,"ax",%progbits
 695              		.align	2
 696              		.thumb
 697              		.thumb_func
 699              	RTC_WriteAlarmCounter:
 700              	.LFB85:
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
 701              		.loc 1 1669 0
 702              		.cfi_startproc
 703              		@ args = 0, pretend = 0, frame = 0
 704              		@ frame_needed = 0, uses_anonymous_args = 0
 705              	.LVL91:
 706 0000 38B5     		push	{r3, r4, r5, lr}
 707              	.LCFI8:
 708              		.cfi_def_cfa_offset 16
 709              		.cfi_offset 3, -16
 710              		.cfi_offset 4, -12
 711              		.cfi_offset 5, -8
 712              		.cfi_offset 14, -4
 713 0002 0546     		mov	r5, r0
 714 0004 0C46     		mov	r4, r1
 715              	.LVL92:
1673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 716              		.loc 1 1673 0
 717 0006 FFF7FEFF 		bl	RTC_EnterInitMode
 718              	.LVL93:
 719 000a 50B9     		cbnz	r0, .L57
1680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC COUNTER LSB word */
 720              		.loc 1 1680 0
 721 000c 2B68     		ldr	r3, [r5]
 722 000e 220C     		lsrs	r2, r4, #16
 723 0010 1A62     		str	r2, [r3, #32]
1682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 724              		.loc 1 1682 0
 725 0012 2B68     		ldr	r3, [r5]
 726 0014 A4B2     		uxth	r4, r4
 727              	.LVL94:
 728 0016 5C62     		str	r4, [r3, #36]
1685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 729              		.loc 1 1685 0
 730 0018 2846     		mov	r0, r5
 731 001a FFF7FEFF 		bl	RTC_ExitInitMode
 732              	.LVL95:
 733 001e 10B9     		cbnz	r0, .L58
 734 0020 38BD     		pop	{r3, r4, r5, pc}
 735              	.LVL96:
 736              	.L57:
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 737              		.loc 1 1675 0
 738 0022 0120     		movs	r0, #1
 739 0024 38BD     		pop	{r3, r4, r5, pc}
 740              	.LVL97:
 741              	.L58:
1687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 742              		.loc 1 1687 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 49


 743 0026 0120     		movs	r0, #1
 744              	.LVL98:
1692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 745              		.loc 1 1692 0
 746 0028 38BD     		pop	{r3, r4, r5, pc}
 747              		.cfi_endproc
 748              	.LFE85:
 750 002a 00BF     		.section	.text.HAL_RTC_MspInit,"ax",%progbits
 751              		.align	2
 752              		.weak	HAL_RTC_MspInit
 753              		.thumb
 754              		.thumb_func
 756              	HAL_RTC_MspInit:
 757              	.LFB67:
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 758              		.loc 1 651 0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 0
 761              		@ frame_needed = 0, uses_anonymous_args = 0
 762              		@ link register save eliminated.
 763              	.LVL99:
 764 0000 7047     		bx	lr
 765              		.cfi_endproc
 766              	.LFE67:
 768 0002 00BF     		.section	.text.HAL_RTC_MspDeInit,"ax",%progbits
 769              		.align	2
 770              		.weak	HAL_RTC_MspDeInit
 771              		.thumb
 772              		.thumb_func
 774              	HAL_RTC_MspDeInit:
 775              	.LFB68:
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 776              		.loc 1 666 0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 0
 779              		@ frame_needed = 0, uses_anonymous_args = 0
 780              		@ link register save eliminated.
 781              	.LVL100:
 782 0000 7047     		bx	lr
 783              		.cfi_endproc
 784              	.LFE68:
 786 0002 00BF     		.section	.text.HAL_RTC_SetTime,"ax",%progbits
 787              		.align	2
 788              		.global	HAL_RTC_SetTime
 789              		.thumb
 790              		.thumb_func
 792              	HAL_RTC_SetTime:
 793              	.LFB69:
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0U, counter_alarm = 0U;
 794              		.loc 1 704 0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 0
 797              		@ frame_needed = 0, uses_anonymous_args = 0
 798              	.LVL101:
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0U, counter_alarm = 0U;
 799              		.loc 1 704 0
 800 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 50


 801              	.LCFI9:
 802              		.cfi_def_cfa_offset 16
 803              		.cfi_offset 4, -16
 804              		.cfi_offset 5, -12
 805              		.cfi_offset 6, -8
 806              		.cfi_offset 14, -4
 807              	.LVL102:
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 808              		.loc 1 708 0
 809 0002 0028     		cmp	r0, #0
 810 0004 55D0     		beq	.L68
 811 0006 0446     		mov	r4, r0
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 812              		.loc 1 708 0 is_stmt 0 discriminator 1
 813 0008 0029     		cmp	r1, #0
 814 000a 54D0     		beq	.L69
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 815              		.loc 1 717 0 is_stmt 1
 816 000c 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 817 000e 012B     		cmp	r3, #1
 818 0010 53D0     		beq	.L70
 819 0012 0E46     		mov	r6, r1
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 820              		.loc 1 717 0 is_stmt 0 discriminator 2
 821 0014 0123     		movs	r3, #1
 822 0016 0374     		strb	r3, [r0, #16]
 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 823              		.loc 1 719 0 is_stmt 1 discriminator 2
 824 0018 0223     		movs	r3, #2
 825 001a 4374     		strb	r3, [r0, #17]
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 826              		.loc 1 721 0 discriminator 2
 827 001c 5AB9     		cbnz	r2, .L64
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                               ((uint32_t)sTime->Minutes * 60U) + \
 828              		.loc 1 727 0
 829 001e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 830              	.LVL103:
 728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                               ((uint32_t)sTime->Seconds));
 831              		.loc 1 728 0
 832 0020 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 833 0022 C3EB0313 		rsb	r3, r3, r3, lsl #4
 834 0026 9900     		lsls	r1, r3, #2
 835              	.LVL104:
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                               ((uint32_t)sTime->Minutes * 60U) + \
 836              		.loc 1 727 0
 837 0028 4FF46165 		mov	r5, #3600
 838 002c 05FB0215 		mla	r5, r5, r2, r1
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 839              		.loc 1 729 0
 840 0030 B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                               ((uint32_t)sTime->Minutes * 60U) + \
 841              		.loc 1 727 0
 842 0032 1D44     		add	r5, r5, r3
 843              	.LVL105:
 844 0034 11E0     		b	.L65
 845              	.LVL106:
 846              	.L64:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 51


 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                     ((uint32_t)(RTC_Bcd2ToByte(sTime->Minutes)) * 60U) + \
 847              		.loc 1 737 0
 848 0036 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 849              	.LVL107:
 850 0038 FFF7FEFF 		bl	RTC_Bcd2ToByte
 851              	.LVL108:
 852 003c 4FF46165 		mov	r5, #3600
 853 0040 05FB00F5 		mul	r5, r5, r0
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                     ((uint32_t)(RTC_Bcd2ToByte(sTime->Seconds))));
 854              		.loc 1 738 0
 855 0044 7078     		ldrb	r0, [r6, #1]	@ zero_extendqisi2
 856 0046 FFF7FEFF 		bl	RTC_Bcd2ToByte
 857              	.LVL109:
 858 004a C0EB0010 		rsb	r0, r0, r0, lsl #4
 859 004e 8300     		lsls	r3, r0, #2
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                     ((uint32_t)(RTC_Bcd2ToByte(sTime->Minutes)) * 60U) + \
 860              		.loc 1 737 0
 861 0050 1D44     		add	r5, r5, r3
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 862              		.loc 1 739 0
 863 0052 B078     		ldrb	r0, [r6, #2]	@ zero_extendqisi2
 864 0054 FFF7FEFF 		bl	RTC_Bcd2ToByte
 865              	.LVL110:
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                     ((uint32_t)(RTC_Bcd2ToByte(sTime->Minutes)) * 60U) + \
 866              		.loc 1 737 0
 867 0058 0544     		add	r5, r5, r0
 868              	.LVL111:
 869              	.L65:
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 870              		.loc 1 743 0
 871 005a 2946     		mov	r1, r5
 872 005c 2046     		mov	r0, r4
 873 005e FFF7FEFF 		bl	RTC_WriteTimeCounter
 874              	.LVL112:
 875 0062 0646     		mov	r6, r0
 876              	.LVL113:
 877 0064 28B1     		cbz	r0, .L66
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 878              		.loc 1 746 0
 879 0066 0423     		movs	r3, #4
 880 0068 6374     		strb	r3, [r4, #17]
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 881              		.loc 1 749 0
 882 006a 0023     		movs	r3, #0
 883 006c 2374     		strb	r3, [r4, #16]
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 884              		.loc 1 751 0
 885 006e 0126     		movs	r6, #1
 886 0070 24E0     		b	.L63
 887              	.L66:
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 888              		.loc 1 756 0
 889 0072 2268     		ldr	r2, [r4]
 890 0074 5368     		ldr	r3, [r2, #4]
 891 0076 23F00503 		bic	r3, r3, #5
 892 007a 5360     		str	r3, [r2, #4]
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 52


 893              		.loc 1 759 0
 894 007c 2046     		mov	r0, r4
 895 007e FFF7FEFF 		bl	RTC_ReadAlarmCounter
 896              	.LVL114:
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 897              		.loc 1 762 0
 898 0082 B0F1FF3F 		cmp	r0, #-1
 899 0086 0FD0     		beq	.L67
 764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 900              		.loc 1 764 0
 901 0088 8542     		cmp	r5, r0
 902 008a 0DD9     		bls	.L67
 903              	.LVL115:
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
 904              		.loc 1 770 0
 905 008c 00F5A831 		add	r1, r0, #86016
 906 0090 01F5C071 		add	r1, r1, #384
 907 0094 2046     		mov	r0, r4
 908              	.LVL116:
 909 0096 FFF7FEFF 		bl	RTC_WriteAlarmCounter
 910              	.LVL117:
 911 009a 28B1     		cbz	r0, .L67
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 912              		.loc 1 773 0
 913 009c 0423     		movs	r3, #4
 914 009e 6374     		strb	r3, [r4, #17]
 776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 915              		.loc 1 776 0
 916 00a0 0023     		movs	r3, #0
 917 00a2 2374     		strb	r3, [r4, #16]
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
 918              		.loc 1 778 0
 919 00a4 0126     		movs	r6, #1
 920 00a6 09E0     		b	.L63
 921              	.L67:
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 922              		.loc 1 783 0
 923 00a8 0123     		movs	r3, #1
 924 00aa 6374     		strb	r3, [r4, #17]
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 925              		.loc 1 785 0
 926 00ac 0023     		movs	r3, #0
 927 00ae 2374     		strb	r3, [r4, #16]
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 928              		.loc 1 787 0
 929 00b0 04E0     		b	.L63
 930              	.LVL118:
 931              	.L68:
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 932              		.loc 1 710 0
 933 00b2 0126     		movs	r6, #1
 934 00b4 02E0     		b	.L63
 935              	.L69:
 936 00b6 0126     		movs	r6, #1
 937 00b8 00E0     		b	.L63
 938              	.L70:
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 53


 939              		.loc 1 717 0
 940 00ba 0226     		movs	r6, #2
 941              	.LVL119:
 942              	.L63:
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 943              		.loc 1 789 0
 944 00bc 3046     		mov	r0, r6
 945 00be 70BD     		pop	{r4, r5, r6, pc}
 946              		.cfi_endproc
 947              	.LFE69:
 949              		.section	.text.HAL_RTC_GetTime,"ax",%progbits
 950              		.align	2
 951              		.global	HAL_RTC_GetTime
 952              		.thumb
 953              		.thumb_func
 955              	HAL_RTC_GetTime:
 956              	.LFB70:
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0U, counter_alarm = 0U, days_elapsed = 0U, hours = 0U;
 957              		.loc 1 803 0
 958              		.cfi_startproc
 959              		@ args = 0, pretend = 0, frame = 0
 960              		@ frame_needed = 0, uses_anonymous_args = 0
 961              	.LVL120:
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 962              		.loc 1 807 0
 963 0000 0028     		cmp	r0, #0
 964 0002 6BD0     		beq	.L79
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0U, counter_alarm = 0U, days_elapsed = 0U, hours = 0U;
 965              		.loc 1 803 0 discriminator 1
 966 0004 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 967              	.LCFI10:
 968              		.cfi_def_cfa_offset 32
 969              		.cfi_offset 3, -32
 970              		.cfi_offset 4, -28
 971              		.cfi_offset 5, -24
 972              		.cfi_offset 6, -20
 973              		.cfi_offset 7, -16
 974              		.cfi_offset 8, -12
 975              		.cfi_offset 9, -8
 976              		.cfi_offset 14, -4
 977 0008 0546     		mov	r5, r0
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 978              		.loc 1 807 0 discriminator 1
 979 000a 0029     		cmp	r1, #0
 980 000c 68D0     		beq	.L80
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 981              		.loc 1 816 0
 982 000e 0368     		ldr	r3, [r0]
 983 0010 5B68     		ldr	r3, [r3, #4]
 984 0012 13F0040F 		tst	r3, #4
 985 0016 66D1     		bne	.L81
 986 0018 1646     		mov	r6, r2
 987 001a 0C46     		mov	r4, r1
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 988              		.loc 1 822 0
 989 001c FFF7FEFF 		bl	RTC_ReadTimeCounter
 990              	.LVL121:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 54


 991 0020 0746     		mov	r7, r0
 992              	.LVL122:
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sTime->Minutes  = (uint8_t)((counter_time % 3600U) / 60U);
 993              		.loc 1 825 0
 994 0022 384A     		ldr	r2, .L88
 995 0024 A2FB0032 		umull	r3, r2, r2, r0
 996 0028 D20A     		lsrs	r2, r2, #11
 997              	.LVL123:
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sTime->Seconds  = (uint8_t)((counter_time % 3600U) % 60U);
 998              		.loc 1 826 0
 999 002a 4FF46160 		mov	r0, #3600
 1000              	.LVL124:
 1001 002e 00FB1270 		mls	r0, r0, r2, r7
 1002 0032 354B     		ldr	r3, .L88+4
 1003 0034 A3FB0013 		umull	r1, r3, r3, r0
 1004 0038 5B09     		lsrs	r3, r3, #5
 1005 003a 6370     		strb	r3, [r4, #1]
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1006              		.loc 1 827 0
 1007 003c C3EB0313 		rsb	r3, r3, r3, lsl #4
 1008 0040 9900     		lsls	r1, r3, #2
 1009 0042 411A     		subs	r1, r0, r1
 1010 0044 A170     		strb	r1, [r4, #2]
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1011              		.loc 1 829 0
 1012 0046 172A     		cmp	r2, #23
 1013 0048 37D9     		bls	.L74
 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1014              		.loc 1 832 0
 1015 004a 304B     		ldr	r3, .L88+8
 1016 004c A3FB0738 		umull	r3, r8, r3, r7
 1017 0050 4FEA1848 		lsr	r8, r8, #16
 1018              	.LVL125:
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1019              		.loc 1 835 0
 1020 0054 2E4B     		ldr	r3, .L88+12
 1021 0056 A3FB0213 		umull	r1, r3, r3, r2
 1022 005a 1B09     		lsrs	r3, r3, #4
 1023 005c 03EB4303 		add	r3, r3, r3, lsl #1
 1024 0060 D900     		lsls	r1, r3, #3
 1025 0062 531A     		subs	r3, r2, r1
 1026 0064 2370     		strb	r3, [r4]
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1027              		.loc 1 838 0
 1028 0066 2846     		mov	r0, r5
 1029 0068 FFF7FEFF 		bl	RTC_ReadAlarmCounter
 1030              	.LVL126:
 1031 006c 8146     		mov	r9, r0
 1032              	.LVL127:
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 1033              		.loc 1 841 0
 1034 006e B0F1FF3F 		cmp	r0, #-1
 1035 0072 06D0     		beq	.L75
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 1036              		.loc 1 841 0 is_stmt 0 discriminator 1
 1037 0074 8742     		cmp	r7, r0
 1038 0076 02D2     		bcs	.L82
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 55


 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 1039              		.loc 1 843 0 is_stmt 1
 1040 0078 C7EB0009 		rsb	r9, r7, r0
 1041              	.LVL128:
 1042 007c 01E0     		b	.L75
 1043              	.LVL129:
 1044              	.L82:
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 1045              		.loc 1 849 0
 1046 007e 4FF0FF39 		mov	r9, #-1
 1047              	.LVL130:
 1048              	.L75:
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1049              		.loc 1 853 0
 1050 0082 244B     		ldr	r3, .L88+16
 1051 0084 03FB1877 		mls	r7, r3, r8, r7
 1052              	.LVL131:
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 1053              		.loc 1 856 0
 1054 0088 3946     		mov	r1, r7
 1055 008a 2846     		mov	r0, r5
 1056 008c FFF7FEFF 		bl	RTC_WriteTimeCounter
 1057              	.LVL132:
 1058 0090 60BB     		cbnz	r0, .L83
 862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 1059              		.loc 1 862 0
 1060 0092 B9F1FF3F 		cmp	r9, #-1
 1061 0096 06D0     		beq	.L76
 1062              	.LVL133:
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 1063              		.loc 1 867 0
 1064 0098 09EB0701 		add	r1, r9, r7
 1065              	.LVL134:
 1066 009c 2846     		mov	r0, r5
 1067 009e FFF7FEFF 		bl	RTC_WriteAlarmCounter
 1068              	.LVL135:
 1069 00a2 28B1     		cbz	r0, .L77
 1070 00a4 25E0     		b	.L84
 1071              	.LVL136:
 1072              	.L76:
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 1073              		.loc 1 875 0
 1074 00a6 4946     		mov	r1, r9
 1075 00a8 2846     		mov	r0, r5
 1076 00aa FFF7FEFF 		bl	RTC_WriteAlarmCounter
 1077              	.LVL137:
 1078 00ae 18BB     		cbnz	r0, .L85
 1079              	.LVL138:
 1080              	.L77:
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1081              		.loc 1 882 0
 1082 00b0 4146     		mov	r1, r8
 1083 00b2 2846     		mov	r0, r5
 1084 00b4 FFF7FEFF 		bl	RTC_DateUpdate
 1085              	.LVL139:
 1086 00b8 00E0     		b	.L78
 1087              	.LVL140:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 56


 1088              	.L74:
 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1089              		.loc 1 886 0
 1090 00ba 2270     		strb	r2, [r4]
 1091              	.LVL141:
 1092              	.L78:
 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1093              		.loc 1 890 0
 1094 00bc FEB1     		cbz	r6, .L86
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sTime->Minutes  = (uint8_t)RTC_ByteToBcd2(sTime->Minutes);
 1095              		.loc 1 893 0
 1096 00be 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1097 00c0 FFF7FEFF 		bl	RTC_ByteToBcd2
 1098              	.LVL142:
 1099 00c4 2070     		strb	r0, [r4]
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sTime->Seconds  = (uint8_t)RTC_ByteToBcd2(sTime->Seconds);
 1100              		.loc 1 894 0
 1101 00c6 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1102 00c8 FFF7FEFF 		bl	RTC_ByteToBcd2
 1103              	.LVL143:
 1104 00cc 6070     		strb	r0, [r4, #1]
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1105              		.loc 1 895 0
 1106 00ce A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 1107 00d0 FFF7FEFF 		bl	RTC_ByteToBcd2
 1108              	.LVL144:
 1109 00d4 A070     		strb	r0, [r4, #2]
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 1110              		.loc 1 898 0
 1111 00d6 0020     		movs	r0, #0
 1112 00d8 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1113              	.LVL145:
 1114              	.L79:
 1115              	.LCFI11:
 1116              		.cfi_def_cfa_offset 0
 1117              		.cfi_restore 3
 1118              		.cfi_restore 4
 1119              		.cfi_restore 5
 1120              		.cfi_restore 6
 1121              		.cfi_restore 7
 1122              		.cfi_restore 8
 1123              		.cfi_restore 9
 1124              		.cfi_restore 14
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1125              		.loc 1 809 0
 1126 00dc 0120     		movs	r0, #1
 1127              	.LVL146:
 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1128              		.loc 1 899 0
 1129 00de 7047     		bx	lr
 1130              	.LVL147:
 1131              	.L80:
 1132              	.LCFI12:
 1133              		.cfi_def_cfa_offset 32
 1134              		.cfi_offset 3, -32
 1135              		.cfi_offset 4, -28
 1136              		.cfi_offset 5, -24
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 57


 1137              		.cfi_offset 6, -20
 1138              		.cfi_offset 7, -16
 1139              		.cfi_offset 8, -12
 1140              		.cfi_offset 9, -8
 1141              		.cfi_offset 14, -4
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1142              		.loc 1 809 0
 1143 00e0 0120     		movs	r0, #1
 1144              	.LVL148:
 1145 00e2 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1146              	.LVL149:
 1147              	.L81:
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1148              		.loc 1 818 0
 1149 00e6 0120     		movs	r0, #1
 1150              	.LVL150:
 1151 00e8 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1152              	.LVL151:
 1153              	.L83:
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 1154              		.loc 1 858 0
 1155 00ec 0120     		movs	r0, #1
 1156 00ee BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1157              	.LVL152:
 1158              	.L84:
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 1159              		.loc 1 869 0
 1160 00f2 0120     		movs	r0, #1
 1161 00f4 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1162              	.LVL153:
 1163              	.L85:
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 1164              		.loc 1 877 0
 1165 00f8 0120     		movs	r0, #1
 1166 00fa BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1167              	.LVL154:
 1168              	.L86:
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 1169              		.loc 1 898 0
 1170 00fe 0020     		movs	r0, #0
 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1171              		.loc 1 899 0
 1172 0100 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1173              	.LVL155:
 1174              	.L89:
 1175              		.align	2
 1176              	.L88:
 1177 0104 C5B3A291 		.word	-1851608123
 1178 0108 89888888 		.word	-2004318071
 1179 010c 07452EC2 		.word	-1037155065
 1180 0110 ABAAAAAA 		.word	-1431655765
 1181 0114 80510100 		.word	86400
 1182              		.cfi_endproc
 1183              	.LFE70:
 1185              		.section	.text.HAL_RTC_SetDate,"ax",%progbits
 1186              		.align	2
 1187              		.global	HAL_RTC_SetDate
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 58


 1188              		.thumb
 1189              		.thumb_func
 1191              	HAL_RTC_SetDate:
 1192              	.LFB71:
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0U, counter_alarm = 0U, hours = 0U;
 1193              		.loc 1 914 0
 1194              		.cfi_startproc
 1195              		@ args = 0, pretend = 0, frame = 0
 1196              		@ frame_needed = 0, uses_anonymous_args = 0
 1197              	.LVL156:
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1198              		.loc 1 918 0
 1199 0000 0028     		cmp	r0, #0
 1200 0002 5CD0     		beq	.L96
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0U, counter_alarm = 0U, hours = 0U;
 1201              		.loc 1 914 0 discriminator 1
 1202 0004 38B5     		push	{r3, r4, r5, lr}
 1203              	.LCFI13:
 1204              		.cfi_def_cfa_offset 16
 1205              		.cfi_offset 3, -16
 1206              		.cfi_offset 4, -12
 1207              		.cfi_offset 5, -8
 1208              		.cfi_offset 14, -4
 1209 0006 0446     		mov	r4, r0
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1210              		.loc 1 918 0 discriminator 1
 1211 0008 0029     		cmp	r1, #0
 1212 000a 5AD0     		beq	.L97
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1213              		.loc 1 927 0
 1214 000c 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 1215 000e 012B     		cmp	r3, #1
 1216 0010 59D0     		beq	.L98
 1217 0012 0D46     		mov	r5, r1
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1218              		.loc 1 927 0 is_stmt 0 discriminator 2
 1219 0014 0123     		movs	r3, #1
 1220 0016 0374     		strb	r3, [r0, #16]
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1221              		.loc 1 929 0 is_stmt 1 discriminator 2
 1222 0018 0223     		movs	r3, #2
 1223 001a 4374     		strb	r3, [r0, #17]
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1224              		.loc 1 931 0 discriminator 2
 1225 001c 32B9     		cbnz	r2, .L92
 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Month = sDate->Month;
 1226              		.loc 1 938 0
 1227 001e CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 1228 0020 C373     		strb	r3, [r0, #15]
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Date  = sDate->Date;
 1229              		.loc 1 939 0
 1230 0022 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 1231 0024 4373     		strb	r3, [r0, #13]
 940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1232              		.loc 1 940 0
 1233 0026 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 1234 0028 8373     		strb	r3, [r0, #14]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 59


 1235 002a 0BE0     		b	.L93
 1236              	.L92:
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Month = RTC_Bcd2ToByte(sDate->Month);
 1237              		.loc 1 949 0
 1238 002c C878     		ldrb	r0, [r1, #3]	@ zero_extendqisi2
 1239              	.LVL157:
 1240 002e FFF7FEFF 		bl	RTC_Bcd2ToByte
 1241              	.LVL158:
 1242 0032 E073     		strb	r0, [r4, #15]
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Date  = RTC_Bcd2ToByte(sDate->Date);
 1243              		.loc 1 950 0
 1244 0034 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 1245 0036 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1246              	.LVL159:
 1247 003a 6073     		strb	r0, [r4, #13]
 951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1248              		.loc 1 951 0
 1249 003c A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 1250 003e FFF7FEFF 		bl	RTC_Bcd2ToByte
 1251              	.LVL160:
 1252 0042 A073     		strb	r0, [r4, #14]
 1253              	.L93:
 955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->WeekDay = hrtc->DateToUpdate.WeekDay;
 1254              		.loc 1 955 0
 1255 0044 A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 1256 0046 617B     		ldrb	r1, [r4, #13]	@ zero_extendqisi2
 1257 0048 E07B     		ldrb	r0, [r4, #15]	@ zero_extendqisi2
 1258 004a FFF7FEFF 		bl	RTC_WeekDayNum
 1259              	.LVL161:
 1260 004e 2073     		strb	r0, [r4, #12]
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1261              		.loc 1 956 0
 1262 0050 2870     		strb	r0, [r5]
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1263              		.loc 1 960 0
 1264 0052 2046     		mov	r0, r4
 1265 0054 FFF7FEFF 		bl	RTC_ReadTimeCounter
 1266              	.LVL162:
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (hours > 24U)
 1267              		.loc 1 963 0
 1268 0058 1C4B     		ldr	r3, .L100
 1269 005a A3FB0023 		umull	r2, r3, r3, r0
 1270              	.LVL163:
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1271              		.loc 1 964 0
 1272 005e B3F5484F 		cmp	r3, #51200
 1273 0062 27D3     		bcc	.L94
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Write time counter in RTC registers */
 1274              		.loc 1 967 0
 1275 0064 1A4D     		ldr	r5, .L100+4
 1276              	.LVL164:
 1277 0066 A5FB0035 		umull	r3, r5, r5, r0
 1278              	.LVL165:
 1279 006a 2B0C     		lsrs	r3, r5, #16
 1280 006c 194D     		ldr	r5, .L100+8
 1281 006e 05FB1305 		mls	r5, r5, r3, r0
 1282              	.LVL166:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 60


 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 1283              		.loc 1 969 0
 1284 0072 2946     		mov	r1, r5
 1285 0074 2046     		mov	r0, r4
 1286              	.LVL167:
 1287 0076 FFF7FEFF 		bl	RTC_WriteTimeCounter
 1288              	.LVL168:
 1289 007a 28B1     		cbz	r0, .L95
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1290              		.loc 1 972 0
 1291 007c 0423     		movs	r3, #4
 1292 007e 6374     		strb	r3, [r4, #17]
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1293              		.loc 1 975 0
 1294 0080 0023     		movs	r3, #0
 1295 0082 2374     		strb	r3, [r4, #16]
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 1296              		.loc 1 977 0
 1297 0084 0120     		movs	r0, #1
 1298 0086 38BD     		pop	{r3, r4, r5, pc}
 1299              	.LVL169:
 1300              	.L95:
 981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1301              		.loc 1 981 0
 1302 0088 2046     		mov	r0, r4
 1303 008a FFF7FEFF 		bl	RTC_ReadAlarmCounter
 1304              	.LVL170:
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 1305              		.loc 1 984 0
 1306 008e B0F1FF3F 		cmp	r0, #-1
 1307 0092 0FD0     		beq	.L94
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 1308              		.loc 1 986 0
 1309 0094 8542     		cmp	r5, r0
 1310 0096 0DD9     		bls	.L94
 1311              	.LVL171:
 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
 1312              		.loc 1 992 0
 1313 0098 00F5A831 		add	r1, r0, #86016
 1314 009c 01F5C071 		add	r1, r1, #384
 1315 00a0 2046     		mov	r0, r4
 1316              	.LVL172:
 1317 00a2 FFF7FEFF 		bl	RTC_WriteAlarmCounter
 1318              	.LVL173:
 1319 00a6 28B1     		cbz	r0, .L94
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1320              		.loc 1 995 0
 1321 00a8 0423     		movs	r3, #4
 1322 00aa 6374     		strb	r3, [r4, #17]
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1323              		.loc 1 998 0
 1324 00ac 0023     		movs	r3, #0
 1325 00ae 2374     		strb	r3, [r4, #16]
1000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
 1326              		.loc 1 1000 0
 1327 00b0 0120     		movs	r0, #1
 1328 00b2 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 61


 1329              	.LVL174:
 1330              	.L94:
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1331              		.loc 1 1008 0
 1332 00b4 0123     		movs	r3, #1
 1333 00b6 6374     		strb	r3, [r4, #17]
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1334              		.loc 1 1011 0
 1335 00b8 0020     		movs	r0, #0
 1336 00ba 2074     		strb	r0, [r4, #16]
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 1337              		.loc 1 1013 0
 1338 00bc 38BD     		pop	{r3, r4, r5, pc}
 1339              	.LVL175:
 1340              	.L96:
 1341              	.LCFI14:
 1342              		.cfi_def_cfa_offset 0
 1343              		.cfi_restore 3
 1344              		.cfi_restore 4
 1345              		.cfi_restore 5
 1346              		.cfi_restore 14
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1347              		.loc 1 920 0
 1348 00be 0120     		movs	r0, #1
 1349              	.LVL176:
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1350              		.loc 1 1014 0
 1351 00c0 7047     		bx	lr
 1352              	.LVL177:
 1353              	.L97:
 1354              	.LCFI15:
 1355              		.cfi_def_cfa_offset 16
 1356              		.cfi_offset 3, -16
 1357              		.cfi_offset 4, -12
 1358              		.cfi_offset 5, -8
 1359              		.cfi_offset 14, -4
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1360              		.loc 1 920 0
 1361 00c2 0120     		movs	r0, #1
 1362              	.LVL178:
 1363 00c4 38BD     		pop	{r3, r4, r5, pc}
 1364              	.LVL179:
 1365              	.L98:
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1366              		.loc 1 927 0
 1367 00c6 0220     		movs	r0, #2
 1368              	.LVL180:
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1369              		.loc 1 1014 0
 1370 00c8 38BD     		pop	{r3, r4, r5, pc}
 1371              	.LVL181:
 1372              	.L101:
 1373 00ca 00BF     		.align	2
 1374              	.L100:
 1375 00cc C5B3A291 		.word	-1851608123
 1376 00d0 07452EC2 		.word	-1037155065
 1377 00d4 80510100 		.word	86400
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 62


 1378              		.cfi_endproc
 1379              	.LFE71:
 1381              		.section	.text.HAL_RTC_GetDate,"ax",%progbits
 1382              		.align	2
 1383              		.global	HAL_RTC_GetDate
 1384              		.thumb
 1385              		.thumb_func
 1387              	HAL_RTC_GetDate:
 1388              	.LFB72:
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   RTC_TimeTypeDef stime = {0U};
 1389              		.loc 1 1028 0
 1390              		.cfi_startproc
 1391              		@ args = 0, pretend = 0, frame = 8
 1392              		@ frame_needed = 0, uses_anonymous_args = 0
 1393              	.LVL182:
 1394 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1395              	.LCFI16:
 1396              		.cfi_def_cfa_offset 24
 1397              		.cfi_offset 4, -24
 1398              		.cfi_offset 5, -20
 1399              		.cfi_offset 6, -16
 1400              		.cfi_offset 7, -12
 1401              		.cfi_offset 8, -8
 1402              		.cfi_offset 14, -4
 1403 0004 82B0     		sub	sp, sp, #8
 1404              	.LCFI17:
 1405              		.cfi_def_cfa_offset 32
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1406              		.loc 1 1029 0
 1407 0006 0023     		movs	r3, #0
 1408 0008 ADF80430 		strh	r3, [sp, #4]	@ movhi
 1409 000c 8DF80630 		strb	r3, [sp, #6]
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1410              		.loc 1 1032 0
 1411 0010 00B3     		cbz	r0, .L104
 1412 0012 0546     		mov	r5, r0
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1413              		.loc 1 1032 0 is_stmt 0 discriminator 1
 1414 0014 01B3     		cbz	r1, .L105
 1415 0016 1746     		mov	r7, r2
 1416 0018 0C46     		mov	r4, r1
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1417              		.loc 1 1041 0 is_stmt 1
 1418 001a 1A46     		mov	r2, r3
 1419              	.LVL183:
 1420 001c 01A9     		add	r1, sp, #4
 1421              	.LVL184:
 1422 001e FFF7FEFF 		bl	HAL_RTC_GetTime
 1423              	.LVL185:
 1424 0022 0646     		mov	r6, r0
 1425 0024 D0B9     		cbnz	r0, .L106
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->Year     = hrtc->DateToUpdate.Year;
 1426              		.loc 1 1047 0
 1427 0026 2B7B     		ldrb	r3, [r5, #12]	@ zero_extendqisi2
 1428 0028 2370     		strb	r3, [r4]
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->Month    = hrtc->DateToUpdate.Month;
 1429              		.loc 1 1048 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 63


 1430 002a E87B     		ldrb	r0, [r5, #15]	@ zero_extendqisi2
 1431 002c E070     		strb	r0, [r4, #3]
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->Date     = hrtc->DateToUpdate.Date;
 1432              		.loc 1 1049 0
 1433 002e 95F80D80 		ldrb	r8, [r5, #13]	@ zero_extendqisi2
 1434 0032 84F80180 		strb	r8, [r4, #1]
1050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1435              		.loc 1 1050 0
 1436 0036 AD7B     		ldrb	r5, [r5, #14]	@ zero_extendqisi2
 1437              	.LVL186:
 1438 0038 A570     		strb	r5, [r4, #2]
1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1439              		.loc 1 1053 0
 1440 003a 87B1     		cbz	r7, .L103
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sDate->Month  = (uint8_t)RTC_ByteToBcd2(sDate->Month);
 1441              		.loc 1 1056 0
 1442 003c FFF7FEFF 		bl	RTC_ByteToBcd2
 1443              	.LVL187:
 1444 0040 E070     		strb	r0, [r4, #3]
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sDate->Date   = (uint8_t)RTC_ByteToBcd2(sDate->Date);
 1445              		.loc 1 1057 0
 1446 0042 4046     		mov	r0, r8
 1447 0044 FFF7FEFF 		bl	RTC_ByteToBcd2
 1448              	.LVL188:
 1449 0048 6070     		strb	r0, [r4, #1]
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1450              		.loc 1 1058 0
 1451 004a 2846     		mov	r0, r5
 1452 004c FFF7FEFF 		bl	RTC_ByteToBcd2
 1453              	.LVL189:
 1454 0050 A070     		strb	r0, [r4, #2]
 1455 0052 04E0     		b	.L103
 1456              	.LVL190:
 1457              	.L104:
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1458              		.loc 1 1034 0
 1459 0054 0126     		movs	r6, #1
 1460 0056 02E0     		b	.L103
 1461              	.L105:
 1462 0058 0126     		movs	r6, #1
 1463 005a 00E0     		b	.L103
 1464              	.LVL191:
 1465              	.L106:
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1466              		.loc 1 1043 0
 1467 005c 0126     		movs	r6, #1
 1468              	.LVL192:
 1469              	.L103:
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1470              		.loc 1 1061 0
 1471 005e 3046     		mov	r0, r6
 1472 0060 02B0     		add	sp, sp, #8
 1473              	.LCFI18:
 1474              		.cfi_def_cfa_offset 24
 1475              		@ sp needed
 1476 0062 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1477              		.cfi_endproc
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 64


 1478              	.LFE72:
 1480 0066 00BF     		.section	.text.HAL_RTC_SetAlarm,"ax",%progbits
 1481              		.align	2
 1482              		.global	HAL_RTC_SetAlarm
 1483              		.thumb
 1484              		.thumb_func
 1486              	HAL_RTC_SetAlarm:
 1487              	.LFB73:
1093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_alarm = 0U, counter_time;
 1488              		.loc 1 1093 0
 1489              		.cfi_startproc
 1490              		@ args = 0, pretend = 0, frame = 8
 1491              		@ frame_needed = 0, uses_anonymous_args = 0
 1492              	.LVL193:
 1493 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1494              	.LCFI19:
 1495              		.cfi_def_cfa_offset 20
 1496              		.cfi_offset 4, -20
 1497              		.cfi_offset 5, -16
 1498              		.cfi_offset 6, -12
 1499              		.cfi_offset 7, -8
 1500              		.cfi_offset 14, -4
 1501 0002 83B0     		sub	sp, sp, #12
 1502              	.LCFI20:
 1503              		.cfi_def_cfa_offset 32
 1504              	.LVL194:
1095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1505              		.loc 1 1095 0
 1506 0004 0023     		movs	r3, #0
 1507 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
 1508 000a 8DF80630 		strb	r3, [sp, #6]
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1509              		.loc 1 1098 0
 1510 000e 0028     		cmp	r0, #0
 1511 0010 56D0     		beq	.L114
 1512 0012 0346     		mov	r3, r0
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1513              		.loc 1 1098 0 is_stmt 0 discriminator 1
 1514 0014 0029     		cmp	r1, #0
 1515 0016 55D0     		beq	.L115
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1516              		.loc 1 1108 0 is_stmt 1
 1517 0018 007C     		ldrb	r0, [r0, #16]	@ zero_extendqisi2
 1518              	.LVL195:
 1519 001a 0128     		cmp	r0, #1
 1520 001c 54D0     		beq	.L116
 1521 001e 1D46     		mov	r5, r3
 1522 0020 1646     		mov	r6, r2
 1523 0022 0C46     		mov	r4, r1
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1524              		.loc 1 1108 0 is_stmt 0 discriminator 2
 1525 0024 0123     		movs	r3, #1
 1526              	.LVL196:
 1527 0026 2B74     		strb	r3, [r5, #16]
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1528              		.loc 1 1110 0 is_stmt 1 discriminator 2
 1529 0028 0223     		movs	r3, #2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 65


 1530 002a 6B74     		strb	r3, [r5, #17]
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1531              		.loc 1 1113 0 discriminator 2
 1532 002c 0022     		movs	r2, #0
 1533              	.LVL197:
 1534 002e 01A9     		add	r1, sp, #4
 1535              	.LVL198:
 1536 0030 2846     		mov	r0, r5
 1537 0032 FFF7FEFF 		bl	HAL_RTC_GetTime
 1538              	.LVL199:
 1539 0036 0028     		cmp	r0, #0
 1540 0038 48D1     		bne	.L117
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                             ((uint32_t)stime.Minutes * 60U) + \
 1541              		.loc 1 1119 0
 1542 003a 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                             ((uint32_t)stime.Seconds));
 1543              		.loc 1 1120 0
 1544 003e 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 1545 0042 C3EB0313 		rsb	r3, r3, r3, lsl #4
 1546 0046 9900     		lsls	r1, r3, #2
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                             ((uint32_t)stime.Minutes * 60U) + \
 1547              		.loc 1 1119 0
 1548 0048 4FF46167 		mov	r7, #3600
 1549 004c 07FB0213 		mla	r3, r7, r2, r1
1121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1550              		.loc 1 1121 0
 1551 0050 9DF80670 		ldrb	r7, [sp, #6]	@ zero_extendqisi2
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                             ((uint32_t)stime.Minutes * 60U) + \
 1552              		.loc 1 1119 0
 1553 0054 1F44     		add	r7, r7, r3
 1554              	.LVL200:
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1555              		.loc 1 1123 0
 1556 0056 5EB9     		cbnz	r6, .L110
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                                ((uint32_t)sAlarm->AlarmTime.Minutes * 60U) + \
 1557              		.loc 1 1129 0
 1558 0058 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                                ((uint32_t)sAlarm->AlarmTime.Seconds));
 1559              		.loc 1 1130 0
 1560 005a 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 1561 005c C3EB0313 		rsb	r3, r3, r3, lsl #4
 1562 0060 9900     		lsls	r1, r3, #2
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                                ((uint32_t)sAlarm->AlarmTime.Minutes * 60U) + \
 1563              		.loc 1 1129 0
 1564 0062 4FF46160 		mov	r0, #3600
 1565 0066 00FB0211 		mla	r1, r0, r2, r1
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1566              		.loc 1 1131 0
 1567 006a A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                                ((uint32_t)sAlarm->AlarmTime.Minutes * 60U) + \
 1568              		.loc 1 1129 0
 1569 006c 1944     		add	r1, r1, r3
 1570              	.LVL201:
 1571 006e 11E0     		b	.L111
 1572              	.LVL202:
 1573              	.L110:
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60U) + \
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 66


 1574              		.loc 1 1139 0
 1575 0070 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1576 0072 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1577              	.LVL203:
 1578 0076 4FF46166 		mov	r6, #3600
 1579              	.LVL204:
 1580 007a 06FB00F6 		mul	r6, r6, r0
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
 1581              		.loc 1 1140 0
 1582 007e 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1583 0080 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1584              	.LVL205:
 1585 0084 C0EB0010 		rsb	r0, r0, r0, lsl #4
 1586 0088 8100     		lsls	r1, r0, #2
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60U) + \
 1587              		.loc 1 1139 0
 1588 008a 0E44     		add	r6, r6, r1
1141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1589              		.loc 1 1141 0
 1590 008c A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 1591 008e FFF7FEFF 		bl	RTC_Bcd2ToByte
 1592              	.LVL206:
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60U) + \
 1593              		.loc 1 1139 0
 1594 0092 3118     		adds	r1, r6, r0
 1595              	.LVL207:
 1596              	.L111:
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1597              		.loc 1 1145 0
 1598 0094 B942     		cmp	r1, r7
 1599 0096 03D2     		bcs	.L112
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1600              		.loc 1 1148 0
 1601 0098 01F5A831 		add	r1, r1, #86016
 1602              	.LVL208:
 1603 009c 01F5C071 		add	r1, r1, #384
 1604              	.LVL209:
 1605              	.L112:
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1606              		.loc 1 1152 0
 1607 00a0 2846     		mov	r0, r5
 1608 00a2 FFF7FEFF 		bl	RTC_WriteAlarmCounter
 1609              	.LVL210:
 1610 00a6 0346     		mov	r3, r0
 1611 00a8 28B1     		cbz	r0, .L113
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1612              		.loc 1 1155 0
 1613 00aa 0423     		movs	r3, #4
 1614 00ac 6B74     		strb	r3, [r5, #17]
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1615              		.loc 1 1158 0
 1616 00ae 0023     		movs	r3, #0
 1617 00b0 2B74     		strb	r3, [r5, #16]
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1618              		.loc 1 1160 0
 1619 00b2 0123     		movs	r3, #1
 1620 00b4 0BE0     		b	.L109
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 67


 1621              	.L113:
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1622              		.loc 1 1164 0
 1623 00b6 0122     		movs	r2, #1
 1624 00b8 6A74     		strb	r2, [r5, #17]
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1625              		.loc 1 1166 0
 1626 00ba 0022     		movs	r2, #0
 1627 00bc 2A74     		strb	r2, [r5, #16]
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1628              		.loc 1 1168 0
 1629 00be 06E0     		b	.L109
 1630              	.LVL211:
 1631              	.L114:
1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1632              		.loc 1 1100 0
 1633 00c0 0123     		movs	r3, #1
 1634 00c2 04E0     		b	.L109
 1635              	.L115:
 1636 00c4 0123     		movs	r3, #1
 1637 00c6 02E0     		b	.L109
 1638              	.LVL212:
 1639              	.L116:
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1640              		.loc 1 1108 0
 1641 00c8 0223     		movs	r3, #2
 1642              	.LVL213:
 1643 00ca 00E0     		b	.L109
 1644              	.LVL214:
 1645              	.L117:
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1646              		.loc 1 1115 0
 1647 00cc 0123     		movs	r3, #1
 1648              	.LVL215:
 1649              	.L109:
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1650              		.loc 1 1170 0
 1651 00ce 1846     		mov	r0, r3
 1652 00d0 03B0     		add	sp, sp, #12
 1653              	.LCFI21:
 1654              		.cfi_def_cfa_offset 20
 1655              		@ sp needed
 1656 00d2 F0BD     		pop	{r4, r5, r6, r7, pc}
 1657              		.cfi_endproc
 1658              	.LFE73:
 1660              		.section	.text.HAL_RTC_SetAlarm_IT,"ax",%progbits
 1661              		.align	2
 1662              		.global	HAL_RTC_SetAlarm_IT
 1663              		.thumb
 1664              		.thumb_func
 1666              	HAL_RTC_SetAlarm_IT:
 1667              	.LFB74:
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_alarm = 0U, counter_time;
 1668              		.loc 1 1185 0
 1669              		.cfi_startproc
 1670              		@ args = 0, pretend = 0, frame = 8
 1671              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 68


 1672              	.LVL216:
 1673 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1674              	.LCFI22:
 1675              		.cfi_def_cfa_offset 20
 1676              		.cfi_offset 4, -20
 1677              		.cfi_offset 5, -16
 1678              		.cfi_offset 6, -12
 1679              		.cfi_offset 7, -8
 1680              		.cfi_offset 14, -4
 1681 0002 83B0     		sub	sp, sp, #12
 1682              	.LCFI23:
 1683              		.cfi_def_cfa_offset 32
 1684              	.LVL217:
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1685              		.loc 1 1187 0
 1686 0004 0023     		movs	r3, #0
 1687 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
 1688 000a 8DF80630 		strb	r3, [sp, #6]
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1689              		.loc 1 1190 0
 1690 000e 0028     		cmp	r0, #0
 1691 0010 68D0     		beq	.L125
 1692 0012 0346     		mov	r3, r0
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1693              		.loc 1 1190 0 is_stmt 0 discriminator 1
 1694 0014 0029     		cmp	r1, #0
 1695 0016 67D0     		beq	.L126
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1696              		.loc 1 1200 0 is_stmt 1
 1697 0018 007C     		ldrb	r0, [r0, #16]	@ zero_extendqisi2
 1698              	.LVL218:
 1699 001a 0128     		cmp	r0, #1
 1700 001c 66D0     		beq	.L127
 1701 001e 1D46     		mov	r5, r3
 1702 0020 1646     		mov	r6, r2
 1703 0022 0C46     		mov	r4, r1
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1704              		.loc 1 1200 0 is_stmt 0 discriminator 2
 1705 0024 0123     		movs	r3, #1
 1706              	.LVL219:
 1707 0026 2B74     		strb	r3, [r5, #16]
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1708              		.loc 1 1202 0 is_stmt 1 discriminator 2
 1709 0028 0223     		movs	r3, #2
 1710 002a 6B74     		strb	r3, [r5, #17]
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1711              		.loc 1 1205 0 discriminator 2
 1712 002c 0022     		movs	r2, #0
 1713              	.LVL220:
 1714 002e 01A9     		add	r1, sp, #4
 1715              	.LVL221:
 1716 0030 2846     		mov	r0, r5
 1717 0032 FFF7FEFF 		bl	HAL_RTC_GetTime
 1718              	.LVL222:
 1719 0036 0028     		cmp	r0, #0
 1720 0038 5AD1     		bne	.L128
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                             ((uint32_t)stime.Minutes * 60U) + \
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 69


 1721              		.loc 1 1211 0
 1722 003a 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
1212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                             ((uint32_t)stime.Seconds));
 1723              		.loc 1 1212 0
 1724 003e 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 1725 0042 C3EB0313 		rsb	r3, r3, r3, lsl #4
 1726 0046 9900     		lsls	r1, r3, #2
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                             ((uint32_t)stime.Minutes * 60U) + \
 1727              		.loc 1 1211 0
 1728 0048 4FF46167 		mov	r7, #3600
 1729 004c 07FB0213 		mla	r3, r7, r2, r1
1213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1730              		.loc 1 1213 0
 1731 0050 9DF80670 		ldrb	r7, [sp, #6]	@ zero_extendqisi2
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                             ((uint32_t)stime.Minutes * 60U) + \
 1732              		.loc 1 1211 0
 1733 0054 1F44     		add	r7, r7, r3
 1734              	.LVL223:
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1735              		.loc 1 1215 0
 1736 0056 5EB9     		cbnz	r6, .L121
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                                ((uint32_t)sAlarm->AlarmTime.Minutes * 60U) + \
 1737              		.loc 1 1221 0
 1738 0058 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
1222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                                ((uint32_t)sAlarm->AlarmTime.Seconds));
 1739              		.loc 1 1222 0
 1740 005a 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 1741 005c C3EB0313 		rsb	r3, r3, r3, lsl #4
 1742 0060 9900     		lsls	r1, r3, #2
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                                ((uint32_t)sAlarm->AlarmTime.Minutes * 60U) + \
 1743              		.loc 1 1221 0
 1744 0062 4FF46160 		mov	r0, #3600
 1745 0066 00FB0211 		mla	r1, r0, r2, r1
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1746              		.loc 1 1223 0
 1747 006a A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                                ((uint32_t)sAlarm->AlarmTime.Minutes * 60U) + \
 1748              		.loc 1 1221 0
 1749 006c 1944     		add	r1, r1, r3
 1750              	.LVL224:
 1751 006e 11E0     		b	.L122
 1752              	.LVL225:
 1753              	.L121:
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60U) + \
 1754              		.loc 1 1231 0
 1755 0070 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1756 0072 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1757              	.LVL226:
 1758 0076 4FF46166 		mov	r6, #3600
 1759              	.LVL227:
 1760 007a 06FB00F6 		mul	r6, r6, r0
1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
 1761              		.loc 1 1232 0
 1762 007e 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1763 0080 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1764              	.LVL228:
 1765 0084 C0EB0010 		rsb	r0, r0, r0, lsl #4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 70


 1766 0088 8100     		lsls	r1, r0, #2
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60U) + \
 1767              		.loc 1 1231 0
 1768 008a 0E44     		add	r6, r6, r1
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1769              		.loc 1 1233 0
 1770 008c A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 1771 008e FFF7FEFF 		bl	RTC_Bcd2ToByte
 1772              	.LVL229:
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60U) + \
 1773              		.loc 1 1231 0
 1774 0092 3118     		adds	r1, r6, r0
 1775              	.LVL230:
 1776              	.L122:
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1777              		.loc 1 1237 0
 1778 0094 B942     		cmp	r1, r7
 1779 0096 03D2     		bcs	.L123
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1780              		.loc 1 1240 0
 1781 0098 01F5A831 		add	r1, r1, #86016
 1782              	.LVL231:
 1783 009c 01F5C071 		add	r1, r1, #384
 1784              	.LVL232:
 1785              	.L123:
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1786              		.loc 1 1244 0
 1787 00a0 2846     		mov	r0, r5
 1788 00a2 FFF7FEFF 		bl	RTC_WriteAlarmCounter
 1789              	.LVL233:
 1790 00a6 0346     		mov	r3, r0
 1791 00a8 28B1     		cbz	r0, .L124
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1792              		.loc 1 1247 0
 1793 00aa 0423     		movs	r3, #4
 1794 00ac 6B74     		strb	r3, [r5, #17]
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1795              		.loc 1 1250 0
 1796 00ae 0023     		movs	r3, #0
 1797 00b0 2B74     		strb	r3, [r5, #16]
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1798              		.loc 1 1252 0
 1799 00b2 0123     		movs	r3, #1
 1800 00b4 1DE0     		b	.L120
 1801              	.L124:
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1802              		.loc 1 1257 0
 1803 00b6 2A68     		ldr	r2, [r5]
 1804 00b8 6FF00201 		mvn	r1, #2
 1805 00bc 5160     		str	r1, [r2, #4]
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1806              		.loc 1 1260 0
 1807 00be 2968     		ldr	r1, [r5]
 1808 00c0 0A68     		ldr	r2, [r1]
 1809 00c2 42F00202 		orr	r2, r2, #2
 1810 00c6 0A60     		str	r2, [r1]
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 71


 1811              		.loc 1 1263 0
 1812 00c8 0B4A     		ldr	r2, .L130
 1813 00ca 1168     		ldr	r1, [r2]
 1814 00cc 41F40031 		orr	r1, r1, #131072
 1815 00d0 1160     		str	r1, [r2]
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1816              		.loc 1 1265 0
 1817 00d2 9168     		ldr	r1, [r2, #8]
 1818 00d4 41F40031 		orr	r1, r1, #131072
 1819 00d8 9160     		str	r1, [r2, #8]
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1820              		.loc 1 1267 0
 1821 00da 0122     		movs	r2, #1
 1822 00dc 6A74     		strb	r2, [r5, #17]
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1823              		.loc 1 1269 0
 1824 00de 0022     		movs	r2, #0
 1825 00e0 2A74     		strb	r2, [r5, #16]
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1826              		.loc 1 1271 0
 1827 00e2 06E0     		b	.L120
 1828              	.LVL234:
 1829              	.L125:
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1830              		.loc 1 1192 0
 1831 00e4 0123     		movs	r3, #1
 1832 00e6 04E0     		b	.L120
 1833              	.L126:
 1834 00e8 0123     		movs	r3, #1
 1835 00ea 02E0     		b	.L120
 1836              	.LVL235:
 1837              	.L127:
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1838              		.loc 1 1200 0
 1839 00ec 0223     		movs	r3, #2
 1840              	.LVL236:
 1841 00ee 00E0     		b	.L120
 1842              	.LVL237:
 1843              	.L128:
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1844              		.loc 1 1207 0
 1845 00f0 0123     		movs	r3, #1
 1846              	.LVL238:
 1847              	.L120:
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1848              		.loc 1 1273 0
 1849 00f2 1846     		mov	r0, r3
 1850 00f4 03B0     		add	sp, sp, #12
 1851              	.LCFI24:
 1852              		.cfi_def_cfa_offset 20
 1853              		@ sp needed
 1854 00f6 F0BD     		pop	{r4, r5, r6, r7, pc}
 1855              	.L131:
 1856              		.align	2
 1857              	.L130:
 1858 00f8 00040140 		.word	1073808384
 1859              		.cfi_endproc
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 72


 1860              	.LFE74:
 1862              		.section	.text.HAL_RTC_GetAlarm,"ax",%progbits
 1863              		.align	2
 1864              		.global	HAL_RTC_GetAlarm
 1865              		.thumb
 1866              		.thumb_func
 1868              	HAL_RTC_GetAlarm:
 1869              	.LFB75:
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_alarm = 0U;
 1870              		.loc 1 1290 0
 1871              		.cfi_startproc
 1872              		@ args = 0, pretend = 0, frame = 0
 1873              		@ frame_needed = 0, uses_anonymous_args = 0
 1874              	.LVL239:
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1875              		.loc 1 1297 0
 1876 0000 90B3     		cbz	r0, .L134
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1877              		.loc 1 1297 0 is_stmt 0 discriminator 1
 1878 0002 99B3     		cbz	r1, .L135
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_alarm = 0U;
 1879              		.loc 1 1290 0 is_stmt 1
 1880 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1881              	.LCFI25:
 1882              		.cfi_def_cfa_offset 24
 1883              		.cfi_offset 3, -24
 1884              		.cfi_offset 4, -20
 1885              		.cfi_offset 5, -16
 1886              		.cfi_offset 6, -12
 1887              		.cfi_offset 7, -8
 1888              		.cfi_offset 14, -4
 1889 0006 1D46     		mov	r5, r3
 1890 0008 0C46     		mov	r4, r1
1307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1891              		.loc 1 1307 0
 1892 000a FFF7FEFF 		bl	RTC_ReadAlarmCounter
 1893              	.LVL240:
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sAlarm->AlarmTime.Minutes = (uint32_t)((counter_alarm % 3600U) / 60U);
 1894              		.loc 1 1311 0
 1895 000e 1949     		ldr	r1, .L139
 1896 0010 A1FB0031 		umull	r3, r1, r1, r0
 1897 0014 C90A     		lsrs	r1, r1, #11
 1898 0016 184A     		ldr	r2, .L139+4
 1899 0018 A2FB0132 		umull	r3, r2, r2, r1
 1900 001c 1209     		lsrs	r2, r2, #4
 1901 001e 02EB4202 		add	r2, r2, r2, lsl #1
 1902 0022 D300     		lsls	r3, r2, #3
 1903 0024 CA1A     		subs	r2, r1, r3
 1904 0026 D3B2     		uxtb	r3, r2
 1905 0028 2370     		strb	r3, [r4]
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sAlarm->AlarmTime.Seconds = (uint32_t)((counter_alarm % 3600U) % 60U);
 1906              		.loc 1 1312 0
 1907 002a 4FF46167 		mov	r7, #3600
 1908 002e 07FB1107 		mls	r7, r7, r1, r0
 1909 0032 124A     		ldr	r2, .L139+8
 1910 0034 A2FB0712 		umull	r1, r2, r2, r7
 1911 0038 5209     		lsrs	r2, r2, #5
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 73


 1912 003a D6B2     		uxtb	r6, r2
 1913 003c 6670     		strb	r6, [r4, #1]
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1914              		.loc 1 1313 0
 1915 003e C2EB0212 		rsb	r2, r2, r2, lsl #4
 1916 0042 9000     		lsls	r0, r2, #2
 1917              	.LVL241:
 1918 0044 381A     		subs	r0, r7, r0
 1919 0046 C7B2     		uxtb	r7, r0
 1920 0048 A770     		strb	r7, [r4, #2]
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1921              		.loc 1 1315 0
 1922 004a 8DB1     		cbz	r5, .L136
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes);
 1923              		.loc 1 1317 0
 1924 004c 1846     		mov	r0, r3
 1925 004e FFF7FEFF 		bl	RTC_ByteToBcd2
 1926              	.LVL242:
 1927 0052 2070     		strb	r0, [r4]
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds);
 1928              		.loc 1 1318 0
 1929 0054 3046     		mov	r0, r6
 1930 0056 FFF7FEFF 		bl	RTC_ByteToBcd2
 1931              	.LVL243:
 1932 005a 6070     		strb	r0, [r4, #1]
1319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1933              		.loc 1 1319 0
 1934 005c 3846     		mov	r0, r7
 1935 005e FFF7FEFF 		bl	RTC_ByteToBcd2
 1936              	.LVL244:
 1937 0062 A070     		strb	r0, [r4, #2]
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 1938              		.loc 1 1322 0
 1939 0064 0020     		movs	r0, #0
 1940 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1941              	.LVL245:
 1942              	.L134:
 1943              	.LCFI26:
 1944              		.cfi_def_cfa_offset 0
 1945              		.cfi_restore 3
 1946              		.cfi_restore 4
 1947              		.cfi_restore 5
 1948              		.cfi_restore 6
 1949              		.cfi_restore 7
 1950              		.cfi_restore 14
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1951              		.loc 1 1299 0
 1952 0068 0120     		movs	r0, #1
 1953              	.LVL246:
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1954              		.loc 1 1323 0
 1955 006a 7047     		bx	lr
 1956              	.LVL247:
 1957              	.L135:
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1958              		.loc 1 1299 0
 1959 006c 0120     		movs	r0, #1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 74


 1960              	.LVL248:
 1961 006e 7047     		bx	lr
 1962              	.LVL249:
 1963              	.L136:
 1964              	.LCFI27:
 1965              		.cfi_def_cfa_offset 24
 1966              		.cfi_offset 3, -24
 1967              		.cfi_offset 4, -20
 1968              		.cfi_offset 5, -16
 1969              		.cfi_offset 6, -12
 1970              		.cfi_offset 7, -8
 1971              		.cfi_offset 14, -4
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 1972              		.loc 1 1322 0
 1973 0070 0020     		movs	r0, #0
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1974              		.loc 1 1323 0
 1975 0072 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1976              	.LVL250:
 1977              	.L140:
 1978              		.align	2
 1979              	.L139:
 1980 0074 C5B3A291 		.word	-1851608123
 1981 0078 ABAAAAAA 		.word	-1431655765
 1982 007c 89888888 		.word	-2004318071
 1983              		.cfi_endproc
 1984              	.LFE75:
 1986              		.section	.text.HAL_RTC_DeactivateAlarm,"ax",%progbits
 1987              		.align	2
 1988              		.global	HAL_RTC_DeactivateAlarm
 1989              		.thumb
 1990              		.thumb_func
 1992              	HAL_RTC_DeactivateAlarm:
 1993              	.LFB76:
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 1994              		.loc 1 1335 0
 1995              		.cfi_startproc
 1996              		@ args = 0, pretend = 0, frame = 0
 1997              		@ frame_needed = 0, uses_anonymous_args = 0
 1998              	.LVL251:
1343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1999              		.loc 1 1343 0
 2000 0000 0028     		cmp	r0, #0
 2001 0002 35D0     		beq	.L145
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 2002              		.loc 1 1335 0
 2003 0004 10B5     		push	{r4, lr}
 2004              	.LCFI28:
 2005              		.cfi_def_cfa_offset 8
 2006              		.cfi_offset 4, -8
 2007              		.cfi_offset 14, -4
 2008 0006 0446     		mov	r4, r0
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2009              		.loc 1 1349 0
 2010 0008 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 2011 000a 012B     		cmp	r3, #1
 2012 000c 33D0     		beq	.L146
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 75


1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2013              		.loc 1 1349 0 is_stmt 0 discriminator 2
 2014 000e 0123     		movs	r3, #1
 2015 0010 0374     		strb	r3, [r0, #16]
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2016              		.loc 1 1351 0 is_stmt 1 discriminator 2
 2017 0012 0223     		movs	r3, #2
 2018 0014 4374     		strb	r3, [r0, #17]
1354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2019              		.loc 1 1354 0 discriminator 2
 2020 0016 0268     		ldr	r2, [r0]
 2021 0018 1368     		ldr	r3, [r2]
 2022 001a 23F00203 		bic	r3, r3, #2
 2023 001e 1360     		str	r3, [r2]
1357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2024              		.loc 1 1357 0 discriminator 2
 2025 0020 FFF7FEFF 		bl	RTC_EnterInitMode
 2026              	.LVL252:
 2027 0024 28B1     		cbz	r0, .L143
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2028              		.loc 1 1360 0
 2029 0026 0423     		movs	r3, #4
 2030 0028 6374     		strb	r3, [r4, #17]
1363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2031              		.loc 1 1363 0
 2032 002a 0023     		movs	r3, #0
 2033 002c 2374     		strb	r3, [r4, #16]
1365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 2034              		.loc 1 1365 0
 2035 002e 0123     		movs	r3, #1
 2036 0030 22E0     		b	.L142
 2037              	.L143:
1370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2038              		.loc 1 1370 0
 2039 0032 2368     		ldr	r3, [r4]
 2040 0034 6FF00202 		mvn	r2, #2
 2041 0038 5A60     		str	r2, [r3, #4]
1373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->ALRL, RTC_ALARM_RESETVALUE_REGISTER);
 2042              		.loc 1 1373 0
 2043 003a 2268     		ldr	r2, [r4]
 2044 003c 4FF6FF73 		movw	r3, #65535
 2045 0040 1362     		str	r3, [r2, #32]
1374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2046              		.loc 1 1374 0
 2047 0042 2268     		ldr	r2, [r4]
 2048 0044 5362     		str	r3, [r2, #36]
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2049              		.loc 1 1377 0
 2050 0046 0D4A     		ldr	r2, .L148
 2051 0048 1368     		ldr	r3, [r2]
 2052 004a 23F40033 		bic	r3, r3, #131072
 2053 004e 1360     		str	r3, [r2]
1380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 2054              		.loc 1 1380 0
 2055 0050 2046     		mov	r0, r4
 2056 0052 FFF7FEFF 		bl	RTC_ExitInitMode
 2057              	.LVL253:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 76


 2058 0056 0346     		mov	r3, r0
 2059 0058 28B1     		cbz	r0, .L144
1382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2060              		.loc 1 1382 0
 2061 005a 0423     		movs	r3, #4
 2062 005c 6374     		strb	r3, [r4, #17]
1385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2063              		.loc 1 1385 0
 2064 005e 0023     		movs	r3, #0
 2065 0060 2374     		strb	r3, [r4, #16]
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 2066              		.loc 1 1387 0
 2067 0062 0123     		movs	r3, #1
 2068 0064 08E0     		b	.L142
 2069              	.L144:
1390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2070              		.loc 1 1390 0
 2071 0066 0122     		movs	r2, #1
 2072 0068 6274     		strb	r2, [r4, #17]
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2073              		.loc 1 1393 0
 2074 006a 0022     		movs	r2, #0
 2075 006c 2274     		strb	r2, [r4, #16]
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2076              		.loc 1 1395 0
 2077 006e 03E0     		b	.L142
 2078              	.LVL254:
 2079              	.L145:
 2080              	.LCFI29:
 2081              		.cfi_def_cfa_offset 0
 2082              		.cfi_restore 4
 2083              		.cfi_restore 14
1345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 2084              		.loc 1 1345 0
 2085 0070 0123     		movs	r3, #1
1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2086              		.loc 1 1396 0
 2087 0072 1846     		mov	r0, r3
 2088              	.LVL255:
 2089 0074 7047     		bx	lr
 2090              	.LVL256:
 2091              	.L146:
 2092              	.LCFI30:
 2093              		.cfi_def_cfa_offset 8
 2094              		.cfi_offset 4, -8
 2095              		.cfi_offset 14, -4
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2096              		.loc 1 1349 0
 2097 0076 0223     		movs	r3, #2
 2098              	.LVL257:
 2099              	.L142:
1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2100              		.loc 1 1396 0
 2101 0078 1846     		mov	r0, r3
 2102 007a 10BD     		pop	{r4, pc}
 2103              	.LVL258:
 2104              	.L149:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 77


 2105              		.align	2
 2106              	.L148:
 2107 007c 00040140 		.word	1073808384
 2108              		.cfi_endproc
 2109              	.LFE76:
 2111              		.section	.text.HAL_RTC_AlarmAEventCallback,"ax",%progbits
 2112              		.align	2
 2113              		.weak	HAL_RTC_AlarmAEventCallback
 2114              		.thumb
 2115              		.thumb_func
 2117              	HAL_RTC_AlarmAEventCallback:
 2118              	.LFB78:
1437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 2119              		.loc 1 1437 0
 2120              		.cfi_startproc
 2121              		@ args = 0, pretend = 0, frame = 0
 2122              		@ frame_needed = 0, uses_anonymous_args = 0
 2123              		@ link register save eliminated.
 2124              	.LVL259:
 2125 0000 7047     		bx	lr
 2126              		.cfi_endproc
 2127              	.LFE78:
 2129 0002 00BF     		.section	.text.HAL_RTC_AlarmIRQHandler,"ax",%progbits
 2130              		.align	2
 2131              		.global	HAL_RTC_AlarmIRQHandler
 2132              		.thumb
 2133              		.thumb_func
 2135              	HAL_RTC_AlarmIRQHandler:
 2136              	.LFB77:
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRA))
 2137              		.loc 1 1405 0
 2138              		.cfi_startproc
 2139              		@ args = 0, pretend = 0, frame = 0
 2140              		@ frame_needed = 0, uses_anonymous_args = 0
 2141              	.LVL260:
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRA))
 2142              		.loc 1 1405 0
 2143 0000 10B5     		push	{r4, lr}
 2144              	.LCFI31:
 2145              		.cfi_def_cfa_offset 8
 2146              		.cfi_offset 4, -8
 2147              		.cfi_offset 14, -4
 2148 0002 0446     		mov	r4, r0
1406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2149              		.loc 1 1406 0
 2150 0004 0368     		ldr	r3, [r0]
 2151 0006 1A68     		ldr	r2, [r3]
 2152 0008 12F0020F 		tst	r2, #2
 2153 000c 09D0     		beq	.L152
1409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 2154              		.loc 1 1409 0
 2155 000e 5B68     		ldr	r3, [r3, #4]
 2156 0010 13F0020F 		tst	r3, #2
 2157 0014 05D0     		beq	.L152
1415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
 2158              		.loc 1 1415 0
 2159 0016 FFF7FEFF 		bl	HAL_RTC_AlarmAEventCallback
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 78


 2160              	.LVL261:
1419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 2161              		.loc 1 1419 0
 2162 001a 2368     		ldr	r3, [r4]
 2163 001c 6FF00202 		mvn	r2, #2
 2164 0020 5A60     		str	r2, [r3, #4]
 2165              	.L152:
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2166              		.loc 1 1424 0
 2167 0022 4FF40032 		mov	r2, #131072
 2168 0026 024B     		ldr	r3, .L154
 2169 0028 5A61     		str	r2, [r3, #20]
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2170              		.loc 1 1427 0
 2171 002a 0123     		movs	r3, #1
 2172 002c 6374     		strb	r3, [r4, #17]
 2173 002e 10BD     		pop	{r4, pc}
 2174              	.LVL262:
 2175              	.L155:
 2176              		.align	2
 2177              	.L154:
 2178 0030 00040140 		.word	1073808384
 2179              		.cfi_endproc
 2180              	.LFE77:
 2182              		.section	.text.HAL_RTC_PollForAlarmAEvent,"ax",%progbits
 2183              		.align	2
 2184              		.global	HAL_RTC_PollForAlarmAEvent
 2185              		.thumb
 2186              		.thumb_func
 2188              	HAL_RTC_PollForAlarmAEvent:
 2189              	.LFB79:
1453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = HAL_GetTick();
 2190              		.loc 1 1453 0
 2191              		.cfi_startproc
 2192              		@ args = 0, pretend = 0, frame = 0
 2193              		@ frame_needed = 0, uses_anonymous_args = 0
 2194              	.LVL263:
 2195 0000 70B5     		push	{r4, r5, r6, lr}
 2196              	.LCFI32:
 2197              		.cfi_def_cfa_offset 16
 2198              		.cfi_offset 4, -16
 2199              		.cfi_offset 5, -12
 2200              		.cfi_offset 6, -8
 2201              		.cfi_offset 14, -4
 2202 0002 0446     		mov	r4, r0
 2203 0004 0D46     		mov	r5, r1
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2204              		.loc 1 1454 0
 2205 0006 FFF7FEFF 		bl	HAL_GetTick
 2206              	.LVL264:
 2207 000a 0646     		mov	r6, r0
 2208              	.LVL265:
1457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2209              		.loc 1 1457 0
 2210 000c 64B9     		cbnz	r4, .L159
 2211 000e 17E0     		b	.L162
 2212              	.LVL266:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 79


 2213              	.L161:
1464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 2214              		.loc 1 1464 0
 2215 0010 B5F1FF3F 		cmp	r5, #-1
 2216 0014 08D0     		beq	.L159
1466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 2217              		.loc 1 1466 0
 2218 0016 25B1     		cbz	r5, .L160
1466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 2219              		.loc 1 1466 0 is_stmt 0 discriminator 1
 2220 0018 FFF7FEFF 		bl	HAL_GetTick
 2221              	.LVL267:
 2222 001c 801B     		subs	r0, r0, r6
 2223 001e 8542     		cmp	r5, r0
 2224 0020 02D2     		bcs	.L159
 2225              	.L160:
1468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         return HAL_TIMEOUT;
 2226              		.loc 1 1468 0 is_stmt 1
 2227 0022 0320     		movs	r0, #3
 2228 0024 6074     		strb	r0, [r4, #17]
1469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 2229              		.loc 1 1469 0
 2230 0026 70BD     		pop	{r4, r5, r6, pc}
 2231              	.LVL268:
 2232              	.L159:
1462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2233              		.loc 1 1462 0
 2234 0028 2368     		ldr	r3, [r4]
 2235 002a 5A68     		ldr	r2, [r3, #4]
 2236 002c 12F0020F 		tst	r2, #2
 2237 0030 EED0     		beq	.L161
1475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2238              		.loc 1 1475 0
 2239 0032 6FF00202 		mvn	r2, #2
 2240 0036 5A60     		str	r2, [r3, #4]
1478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2241              		.loc 1 1478 0
 2242 0038 0123     		movs	r3, #1
 2243 003a 6374     		strb	r3, [r4, #17]
1480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2244              		.loc 1 1480 0
 2245 003c 0020     		movs	r0, #0
 2246 003e 70BD     		pop	{r4, r5, r6, pc}
 2247              	.LVL269:
 2248              	.L162:
1459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 2249              		.loc 1 1459 0
 2250 0040 0120     		movs	r0, #1
 2251              	.LVL270:
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2252              		.loc 1 1481 0
 2253 0042 70BD     		pop	{r4, r5, r6, pc}
 2254              		.cfi_endproc
 2255              	.LFE79:
 2257              		.section	.text.HAL_RTC_GetState,"ax",%progbits
 2258              		.align	2
 2259              		.global	HAL_RTC_GetState
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 80


 2260              		.thumb
 2261              		.thumb_func
 2263              	HAL_RTC_GetState:
 2264              	.LFB80:
1508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return hrtc->State;
 2265              		.loc 1 1508 0
 2266              		.cfi_startproc
 2267              		@ args = 0, pretend = 0, frame = 0
 2268              		@ frame_needed = 0, uses_anonymous_args = 0
 2269              		@ link register save eliminated.
 2270              	.LVL271:
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2271              		.loc 1 1509 0
 2272 0000 407C     		ldrb	r0, [r0, #17]	@ zero_extendqisi2
 2273              	.LVL272:
1510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2274              		.loc 1 1510 0
 2275 0002 7047     		bx	lr
 2276              		.cfi_endproc
 2277              	.LFE80:
 2279              		.section	.text.HAL_RTC_WaitForSynchro,"ax",%progbits
 2280              		.align	2
 2281              		.global	HAL_RTC_WaitForSynchro
 2282              		.thumb
 2283              		.thumb_func
 2285              	HAL_RTC_WaitForSynchro:
 2286              	.LFB81:
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 2287              		.loc 1 1541 0
 2288              		.cfi_startproc
 2289              		@ args = 0, pretend = 0, frame = 0
 2290              		@ frame_needed = 0, uses_anonymous_args = 0
 2291              	.LVL273:
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2292              		.loc 1 1545 0
 2293 0000 B8B1     		cbz	r0, .L169
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 2294              		.loc 1 1541 0
 2295 0002 38B5     		push	{r3, r4, r5, lr}
 2296              	.LCFI33:
 2297              		.cfi_def_cfa_offset 16
 2298              		.cfi_offset 3, -16
 2299              		.cfi_offset 4, -12
 2300              		.cfi_offset 5, -8
 2301              		.cfi_offset 14, -4
 2302 0004 0446     		mov	r4, r0
1551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2303              		.loc 1 1551 0
 2304 0006 0268     		ldr	r2, [r0]
 2305 0008 5368     		ldr	r3, [r2, #4]
 2306 000a 23F00803 		bic	r3, r3, #8
 2307 000e 5360     		str	r3, [r2, #4]
1553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2308              		.loc 1 1553 0
 2309 0010 FFF7FEFF 		bl	HAL_GetTick
 2310              	.LVL274:
 2311 0014 0546     		mov	r5, r0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 81


 2312              	.LVL275:
1556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2313              		.loc 1 1556 0
 2314 0016 05E0     		b	.L167
 2315              	.LVL276:
 2316              	.L168:
1558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 2317              		.loc 1 1558 0
 2318 0018 FFF7FEFF 		bl	HAL_GetTick
 2319              	.LVL277:
 2320 001c 401B     		subs	r0, r0, r5
 2321 001e B0F57A7F 		cmp	r0, #1000
 2322 0022 08D8     		bhi	.L170
 2323              	.L167:
1556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2324              		.loc 1 1556 0
 2325 0024 2368     		ldr	r3, [r4]
 2326 0026 5B68     		ldr	r3, [r3, #4]
 2327 0028 13F0080F 		tst	r3, #8
 2328 002c F4D0     		beq	.L168
1564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2329              		.loc 1 1564 0
 2330 002e 0020     		movs	r0, #0
 2331 0030 38BD     		pop	{r3, r4, r5, pc}
 2332              	.LVL278:
 2333              	.L169:
 2334              	.LCFI34:
 2335              		.cfi_def_cfa_offset 0
 2336              		.cfi_restore 3
 2337              		.cfi_restore 4
 2338              		.cfi_restore 5
 2339              		.cfi_restore 14
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 2340              		.loc 1 1547 0
 2341 0032 0120     		movs	r0, #1
 2342              	.LVL279:
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2343              		.loc 1 1565 0
 2344 0034 7047     		bx	lr
 2345              	.LVL280:
 2346              	.L170:
 2347              	.LCFI35:
 2348              		.cfi_def_cfa_offset 16
 2349              		.cfi_offset 3, -16
 2350              		.cfi_offset 4, -12
 2351              		.cfi_offset 5, -8
 2352              		.cfi_offset 14, -4
1560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 2353              		.loc 1 1560 0
 2354 0036 0320     		movs	r0, #3
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2355              		.loc 1 1565 0
 2356 0038 38BD     		pop	{r3, r4, r5, pc}
 2357              		.cfi_endproc
 2358              	.LFE81:
 2360 003a 00BF     		.section	.text.HAL_RTC_Init,"ax",%progbits
 2361              		.align	2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 82


 2362              		.global	HAL_RTC_Init
 2363              		.thumb
 2364              		.thumb_func
 2366              	HAL_RTC_Init:
 2367              	.LFB65:
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t prescaler = 0U;
 2368              		.loc 1 276 0
 2369              		.cfi_startproc
 2370              		@ args = 0, pretend = 0, frame = 0
 2371              		@ frame_needed = 0, uses_anonymous_args = 0
 2372              	.LVL281:
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2373              		.loc 1 279 0
 2374 0000 0028     		cmp	r0, #0
 2375 0002 59D0     		beq	.L181
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t prescaler = 0U;
 2376              		.loc 1 276 0
 2377 0004 10B5     		push	{r4, lr}
 2378              	.LCFI36:
 2379              		.cfi_def_cfa_offset 8
 2380              		.cfi_offset 4, -8
 2381              		.cfi_offset 14, -4
 2382 0006 0446     		mov	r4, r0
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2383              		.loc 1 311 0
 2384 0008 437C     		ldrb	r3, [r0, #17]	@ zero_extendqisi2
 2385 000a 13F0FF0F 		tst	r3, #255
 2386 000e 03D1     		bne	.L174
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2387              		.loc 1 314 0
 2388 0010 0023     		movs	r3, #0
 2389 0012 0374     		strb	r3, [r0, #16]
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 2390              		.loc 1 317 0
 2391 0014 FFF7FEFF 		bl	HAL_RTC_MspInit
 2392              	.LVL282:
 2393              	.L174:
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2394              		.loc 1 322 0
 2395 0018 0223     		movs	r3, #2
 2396 001a 6374     		strb	r3, [r4, #17]
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2397              		.loc 1 325 0
 2398 001c 2046     		mov	r0, r4
 2399 001e FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 2400              	.LVL283:
 2401 0022 18B1     		cbz	r0, .L175
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2402              		.loc 1 328 0
 2403 0024 0423     		movs	r3, #4
 2404 0026 6374     		strb	r3, [r4, #17]
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 2405              		.loc 1 330 0
 2406 0028 0123     		movs	r3, #1
 2407 002a 48E0     		b	.L173
 2408              	.L175:
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 83


 2409              		.loc 1 334 0
 2410 002c 2046     		mov	r0, r4
 2411 002e FFF7FEFF 		bl	RTC_EnterInitMode
 2412              	.LVL284:
 2413 0032 18B1     		cbz	r0, .L176
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2414              		.loc 1 337 0
 2415 0034 0423     		movs	r3, #4
 2416 0036 6374     		strb	r3, [r4, #17]
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 2417              		.loc 1 339 0
 2418 0038 0123     		movs	r3, #1
 2419 003a 40E0     		b	.L173
 2420              	.L176:
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2421              		.loc 1 344 0
 2422 003c 2268     		ldr	r2, [r4]
 2423 003e 5368     		ldr	r3, [r2, #4]
 2424 0040 23F00703 		bic	r3, r3, #7
 2425 0044 5360     		str	r3, [r2, #4]
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 2426              		.loc 1 346 0
 2427 0046 A368     		ldr	r3, [r4, #8]
 2428 0048 23B1     		cbz	r3, .L177
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 2429              		.loc 1 349 0
 2430 004a 1E4A     		ldr	r2, .L184
 2431 004c 136B     		ldr	r3, [r2, #48]
 2432 004e 23F00103 		bic	r3, r3, #1
 2433 0052 1363     		str	r3, [r2, #48]
 2434              	.L177:
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2435              		.loc 1 353 0
 2436 0054 1B49     		ldr	r1, .L184
 2437 0056 CB6A     		ldr	r3, [r1, #44]
 2438 0058 23F46072 		bic	r2, r3, #896
 2439 005c A368     		ldr	r3, [r4, #8]
 2440 005e 1343     		orrs	r3, r3, r2
 2441 0060 CB62     		str	r3, [r1, #44]
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 2442              		.loc 1 355 0
 2443 0062 6068     		ldr	r0, [r4, #4]
 2444 0064 B0F1FF3F 		cmp	r0, #-1
 2445 0068 08D1     		bne	.L178
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2446              		.loc 1 364 0
 2447 006a 0120     		movs	r0, #1
 2448 006c FFF7FEFF 		bl	HAL_RCCEx_GetPeriphCLKFreq
 2449              	.LVL285:
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 2450              		.loc 1 367 0
 2451 0070 18B9     		cbnz	r0, .L179
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         return HAL_ERROR;
 2452              		.loc 1 370 0
 2453 0072 0423     		movs	r3, #4
 2454 0074 6374     		strb	r3, [r4, #17]
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 84


 2455              		.loc 1 371 0
 2456 0076 0123     		movs	r3, #1
 2457 0078 21E0     		b	.L173
 2458              	.L179:
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 2459              		.loc 1 376 0
 2460 007a 0138     		subs	r0, r0, #1
 2461              	.LVL286:
 2462              	.L178:
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     MODIFY_REG(hrtc->Instance->PRLL, RTC_PRLL_PRL, (prescaler & RTC_PRLL_PRL));
 2463              		.loc 1 381 0
 2464 007c 2268     		ldr	r2, [r4]
 2465 007e 9368     		ldr	r3, [r2, #8]
 2466 0080 23F00F03 		bic	r3, r3, #15
 2467 0084 43EA1043 		orr	r3, r3, r0, lsr #16
 2468 0088 9360     		str	r3, [r2, #8]
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2469              		.loc 1 382 0
 2470 008a 2268     		ldr	r2, [r4]
 2471 008c D368     		ldr	r3, [r2, #12]
 2472 008e 1B0C     		lsrs	r3, r3, #16
 2473 0090 1B04     		lsls	r3, r3, #16
 2474 0092 80B2     		uxth	r0, r0
 2475              	.LVL287:
 2476 0094 1843     		orrs	r0, r0, r3
 2477 0096 D060     		str	r0, [r2, #12]
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 2478              		.loc 1 385 0
 2479 0098 2046     		mov	r0, r4
 2480 009a FFF7FEFF 		bl	RTC_ExitInitMode
 2481              	.LVL288:
 2482 009e 0346     		mov	r3, r0
 2483 00a0 18B1     		cbz	r0, .L180
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2484              		.loc 1 387 0
 2485 00a2 0423     		movs	r3, #4
 2486 00a4 6374     		strb	r3, [r4, #17]
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 2487              		.loc 1 389 0
 2488 00a6 0123     		movs	r3, #1
 2489 00a8 09E0     		b	.L173
 2490              	.L180:
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Month = RTC_MONTH_JANUARY;
 2491              		.loc 1 393 0
 2492 00aa 0022     		movs	r2, #0
 2493 00ac E273     		strb	r2, [r4, #15]
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Date = 0x01U;
 2494              		.loc 1 394 0
 2495 00ae 0122     		movs	r2, #1
 2496 00b0 6273     		strb	r2, [r4, #13]
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2497              		.loc 1 395 0
 2498 00b2 A273     		strb	r2, [r4, #14]
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2499              		.loc 1 398 0
 2500 00b4 6274     		strb	r2, [r4, #17]
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 85


 2501              		.loc 1 400 0
 2502 00b6 02E0     		b	.L173
 2503              	.LVL289:
 2504              	.L181:
 2505              	.LCFI37:
 2506              		.cfi_def_cfa_offset 0
 2507              		.cfi_restore 4
 2508              		.cfi_restore 14
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 2509              		.loc 1 281 0
 2510 00b8 0123     		movs	r3, #1
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2511              		.loc 1 402 0
 2512 00ba 1846     		mov	r0, r3
 2513              	.LVL290:
 2514 00bc 7047     		bx	lr
 2515              	.LVL291:
 2516              	.L173:
 2517              	.LCFI38:
 2518              		.cfi_def_cfa_offset 8
 2519              		.cfi_offset 4, -8
 2520              		.cfi_offset 14, -4
 2521 00be 1846     		mov	r0, r3
 2522 00c0 10BD     		pop	{r4, pc}
 2523              	.LVL292:
 2524              	.L185:
 2525 00c2 00BF     		.align	2
 2526              	.L184:
 2527 00c4 006C0040 		.word	1073769472
 2528              		.cfi_endproc
 2529              	.LFE65:
 2531              		.section	.text.HAL_RTC_DeInit,"ax",%progbits
 2532              		.align	2
 2533              		.global	HAL_RTC_DeInit
 2534              		.thumb
 2535              		.thumb_func
 2537              	HAL_RTC_DeInit:
 2538              	.LFB66:
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 2539              		.loc 1 412 0
 2540              		.cfi_startproc
 2541              		@ args = 0, pretend = 0, frame = 0
 2542              		@ frame_needed = 0, uses_anonymous_args = 0
 2543              	.LVL293:
 2544 0000 38B5     		push	{r3, r4, r5, lr}
 2545              	.LCFI39:
 2546              		.cfi_def_cfa_offset 16
 2547              		.cfi_offset 3, -16
 2548              		.cfi_offset 4, -12
 2549              		.cfi_offset 5, -8
 2550              		.cfi_offset 14, -4
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2551              		.loc 1 414 0
 2552 0002 0028     		cmp	r0, #0
 2553 0004 34D0     		beq	.L190
 2554 0006 0446     		mov	r4, r0
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 86


 2555              		.loc 1 423 0
 2556 0008 0223     		movs	r3, #2
 2557 000a 4374     		strb	r3, [r0, #17]
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2558              		.loc 1 426 0
 2559 000c FFF7FEFF 		bl	RTC_EnterInitMode
 2560              	.LVL294:
 2561 0010 28B1     		cbz	r0, .L188
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2562              		.loc 1 429 0
 2563 0012 0423     		movs	r3, #4
 2564 0014 6374     		strb	r3, [r4, #17]
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2565              		.loc 1 432 0
 2566 0016 0023     		movs	r3, #0
 2567 0018 2374     		strb	r3, [r4, #16]
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 2568              		.loc 1 434 0
 2569 001a 0125     		movs	r5, #1
 2570 001c 29E0     		b	.L187
 2571              	.L188:
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->CNTH);
 2572              		.loc 1 438 0
 2573 001e 2268     		ldr	r2, [r4]
 2574 0020 0023     		movs	r3, #0
 2575 0022 D361     		str	r3, [r2, #28]
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->PRLL, 0x00008000U);
 2576              		.loc 1 439 0
 2577 0024 2268     		ldr	r2, [r4]
 2578 0026 9361     		str	r3, [r2, #24]
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->PRLH);
 2579              		.loc 1 440 0
 2580 0028 2268     		ldr	r2, [r4]
 2581 002a 4FF40041 		mov	r1, #32768
 2582 002e D160     		str	r1, [r2, #12]
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2583              		.loc 1 441 0
 2584 0030 2268     		ldr	r2, [r4]
 2585 0032 9360     		str	r3, [r2, #8]
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->CRL);
 2586              		.loc 1 444 0
 2587 0034 2268     		ldr	r2, [r4]
 2588 0036 1360     		str	r3, [r2]
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2589              		.loc 1 445 0
 2590 0038 2268     		ldr	r2, [r4]
 2591 003a 5360     		str	r3, [r2, #4]
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 2592              		.loc 1 447 0
 2593 003c 2046     		mov	r0, r4
 2594 003e FFF7FEFF 		bl	RTC_ExitInitMode
 2595              	.LVL295:
 2596 0042 0546     		mov	r5, r0
 2597 0044 28B1     		cbz	r0, .L189
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2598              		.loc 1 449 0
 2599 0046 0423     		movs	r3, #4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 87


 2600 0048 6374     		strb	r3, [r4, #17]
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2601              		.loc 1 452 0
 2602 004a 0023     		movs	r3, #0
 2603 004c 2374     		strb	r3, [r4, #16]
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 2604              		.loc 1 454 0
 2605 004e 0125     		movs	r5, #1
 2606 0050 0FE0     		b	.L187
 2607              	.L189:
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2608              		.loc 1 459 0
 2609 0052 2046     		mov	r0, r4
 2610 0054 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 2611              	.LVL296:
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2612              		.loc 1 462 0
 2613 0058 2268     		ldr	r2, [r4]
 2614 005a 5368     		ldr	r3, [r2, #4]
 2615 005c 23F00803 		bic	r3, r3, #8
 2616 0060 5360     		str	r3, [r2, #4]
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS) */
 2617              		.loc 1 475 0
 2618 0062 2046     		mov	r0, r4
 2619 0064 FFF7FEFF 		bl	HAL_RTC_MspDeInit
 2620              	.LVL297:
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2621              		.loc 1 478 0
 2622 0068 0023     		movs	r3, #0
 2623 006a 6374     		strb	r3, [r4, #17]
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2624              		.loc 1 481 0
 2625 006c 2374     		strb	r3, [r4, #16]
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2626              		.loc 1 483 0
 2627 006e 00E0     		b	.L187
 2628              	.LVL298:
 2629              	.L190:
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 2630              		.loc 1 416 0
 2631 0070 0125     		movs	r5, #1
 2632              	.LVL299:
 2633              	.L187:
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2634              		.loc 1 484 0
 2635 0072 2846     		mov	r0, r5
 2636 0074 38BD     		pop	{r3, r4, r5, pc}
 2637              		.cfi_endproc
 2638              	.LFE66:
 2640 0076 00BF     		.text
 2641              	.Letext0:
 2642              		.file 2 "d:\\devtools\\gcc-arm\\arm-none-eabi\\include\\machine\\_default_types.h"
 2643              		.file 3 "d:\\devtools\\gcc-arm\\arm-none-eabi\\include\\sys\\_stdint.h"
 2644              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 2645              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2646              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2647              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rtc.h"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 88


 2648              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2649              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 2650              		.file 10 "Drivers/CMSIS/Include/core_cm3.h"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 89


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_hal_rtc.c
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:20     .text.RTC_ReadTimeCounter:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:24     .text.RTC_ReadTimeCounter:00000000 RTC_ReadTimeCounter
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:81     .text.RTC_ReadAlarmCounter:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:85     .text.RTC_ReadAlarmCounter:00000000 RTC_ReadAlarmCounter
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:110    .text.RTC_ByteToBcd2:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:114    .text.RTC_ByteToBcd2:00000000 RTC_ByteToBcd2
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:152    .text.RTC_Bcd2ToByte:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:156    .text.RTC_Bcd2ToByte:00000000 RTC_Bcd2ToByte
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:180    .text.RTC_IsLeapYear:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:184    .text.RTC_IsLeapYear:00000000 RTC_IsLeapYear
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:235    .text.RTC_IsLeapYear:0000003c $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:240    .text.RTC_WeekDayNum:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:244    .text.RTC_WeekDayNum:00000000 RTC_WeekDayNum
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:329    .text.RTC_WeekDayNum:00000090 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:336    .text.RTC_DateUpdate:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:340    .text.RTC_DateUpdate:00000000 RTC_DateUpdate
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:522    .text.RTC_EnterInitMode:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:526    .text.RTC_EnterInitMode:00000000 RTC_EnterInitMode
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:580    .text.RTC_ExitInitMode:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:584    .text.RTC_ExitInitMode:00000000 RTC_ExitInitMode
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:639    .text.RTC_WriteTimeCounter:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:643    .text.RTC_WriteTimeCounter:00000000 RTC_WriteTimeCounter
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:695    .text.RTC_WriteAlarmCounter:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:699    .text.RTC_WriteAlarmCounter:00000000 RTC_WriteAlarmCounter
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:751    .text.HAL_RTC_MspInit:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:756    .text.HAL_RTC_MspInit:00000000 HAL_RTC_MspInit
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:769    .text.HAL_RTC_MspDeInit:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:774    .text.HAL_RTC_MspDeInit:00000000 HAL_RTC_MspDeInit
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:787    .text.HAL_RTC_SetTime:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:792    .text.HAL_RTC_SetTime:00000000 HAL_RTC_SetTime
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:950    .text.HAL_RTC_GetTime:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:955    .text.HAL_RTC_GetTime:00000000 HAL_RTC_GetTime
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:1177   .text.HAL_RTC_GetTime:00000104 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:1186   .text.HAL_RTC_SetDate:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:1191   .text.HAL_RTC_SetDate:00000000 HAL_RTC_SetDate
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:1375   .text.HAL_RTC_SetDate:000000cc $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:1382   .text.HAL_RTC_GetDate:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:1387   .text.HAL_RTC_GetDate:00000000 HAL_RTC_GetDate
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:1481   .text.HAL_RTC_SetAlarm:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:1486   .text.HAL_RTC_SetAlarm:00000000 HAL_RTC_SetAlarm
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:1661   .text.HAL_RTC_SetAlarm_IT:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:1666   .text.HAL_RTC_SetAlarm_IT:00000000 HAL_RTC_SetAlarm_IT
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:1858   .text.HAL_RTC_SetAlarm_IT:000000f8 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:1863   .text.HAL_RTC_GetAlarm:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:1868   .text.HAL_RTC_GetAlarm:00000000 HAL_RTC_GetAlarm
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:1980   .text.HAL_RTC_GetAlarm:00000074 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:1987   .text.HAL_RTC_DeactivateAlarm:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:1992   .text.HAL_RTC_DeactivateAlarm:00000000 HAL_RTC_DeactivateAlarm
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:2107   .text.HAL_RTC_DeactivateAlarm:0000007c $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:2112   .text.HAL_RTC_AlarmAEventCallback:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:2117   .text.HAL_RTC_AlarmAEventCallback:00000000 HAL_RTC_AlarmAEventCallback
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:2130   .text.HAL_RTC_AlarmIRQHandler:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:2135   .text.HAL_RTC_AlarmIRQHandler:00000000 HAL_RTC_AlarmIRQHandler
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:2178   .text.HAL_RTC_AlarmIRQHandler:00000030 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:2183   .text.HAL_RTC_PollForAlarmAEvent:00000000 $t
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s 			page 90


C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:2188   .text.HAL_RTC_PollForAlarmAEvent:00000000 HAL_RTC_PollForAlarmAEvent
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:2258   .text.HAL_RTC_GetState:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:2263   .text.HAL_RTC_GetState:00000000 HAL_RTC_GetState
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:2280   .text.HAL_RTC_WaitForSynchro:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:2285   .text.HAL_RTC_WaitForSynchro:00000000 HAL_RTC_WaitForSynchro
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:2361   .text.HAL_RTC_Init:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:2366   .text.HAL_RTC_Init:00000000 HAL_RTC_Init
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:2527   .text.HAL_RTC_Init:000000c4 $d
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:2532   .text.HAL_RTC_DeInit:00000000 $t
C:\Users\ADMINI~1\AppData\Local\Temp\ccdNWKC0.s:2537   .text.HAL_RTC_DeInit:00000000 HAL_RTC_DeInit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_RCCEx_GetPeriphCLKFreq
